using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/NSFileProviderExtension_Class/index.html#//apple_ref/occ/cl/NSFileProviderExtension	/// <summary>	/// NSFileProviderExtension is the principal class for the File Provider extension. The file provider acts as the back end for the Document Picker extension. It ensures that all the URLs returned by the document picker are backed by files on disk. It can respond to both coordinated-read and coordinated-write operations from the host app, letting you download and upload files as needed. You must provide a file provider if you want to support the open and move modes.	/// </summary>	[iOSVersion(8)]	public class NSFileProviderExtension : NSObject	{		/// <summary>		/// Returns a placeholder URL for a given document URL.		/// </summary>		/// <param name="url">The document URL to be converted.</param>		/// <returns>A placeholder URL for the given document.</returns>		[iOSVersion(8)]		[Export("placeholderURLForURL")]		public static NSURL PlaceholderURLForURL(NSURL url) { return null; }				/// <summary>		/// Writes a document placeholder with the provided metadata.		/// </summary>		/// <param name="placeholderURL">The placeholder URL for the document. You can generate a placeholder URL from a document URL by calling placeholderURLForURL:.</param>		/// <param name="withMetadata">The metadata for this document.</param>		/// <param name="error">If an error occurs while writing the placeholder, the error parameter is set to an NSError object that describes the problem. If you are not interested in the error details, you may pass in NULL.</param>		/// <returns>Yes, if the placeholder is written successfully; otherwise false.</returns>		[iOSVersion(8)]		[Export("writePlaceholderAtURL")]		public static bool WritePlaceholderAtURL(NSURL placeholderURL, NSDictionary withMetadata, NSErrorPointer error) { return false; }				/// <summary>		/// Returns the root URL for all shared documents.		/// </summary>		/// <returns>A URL inside your document pickerâ€™s shared container.</returns>		[iOSVersion(8)]		[Export("documentStorageURL")]		public NSURL DocumentStorageURL() { return null; }				/// <summary>		/// Provides a purpose identifier for coordinated reads and writes.		/// </summary>		/// <returns>A purpose identifier for the Finder Sync extension.</returns>		[iOSVersion(8)]		[Export("providerIdentifier")]		public string ProviderIdentifier() { return ""; }				/// <summary>		/// Returns a unique identifier for the given URL.		/// </summary>		/// <param name="url">The URL of a shared document.</param>		/// <returns>A string that uniquely identifies the document based on its URL.</returns>		[iOSVersion(8)]		[Export("persistentIdentifierForItemAtURL")]		public string PersistentIdentifierForItemAtURL(NSURL url) { return ""; }				/// <summary>		/// Returns the URL for a given persistent identifier.		/// </summary>		/// <param name="identifier">The persistent identifier for a shared document.</param>		/// <returns>The URL of a shared document.</returns>		[iOSVersion(8)]		[Export("URLForItemWithPersistentIdentifier")]		public NSURL URLForItemWithPersistentIdentifier(string identifier) { return null; }				/// <summary>		/// Tells the File Provider extension that a document has changed.		/// </summary>		/// <param name="url">The URL of a shared document.</param>		[iOSVersion(8)]		[Export("itemChangedAtURL")]		public void ItemChangedAtURL(NSURL url) { }				/// <summary>		/// Creates a placeholder for the given URL.		/// </summary>		/// <param name="url">The URL of a shared document.</param>		/// <param name="completionHandler">A block that the system calls after the placeholder is created.   The completion handler takes the following parameter:           error              If the placeholder was successfully written to disk, this value is nil. Otherwise, it holds an NSError object describing the error.</param>		[iOSVersion(8)]		[Export("providePlaceholderAtURL")]		public void ProvidePlaceholderAtURL(NSURL url, Action<NSError> completionHandler) { }				/// <summary>		/// Provides an actual file on disk for a placeholder.		/// </summary>		/// <param name="url">The URL of a shared document.</param>		/// <param name="completionHandler">A block to be called as soon as the file is available.   The completion handler takes the following parameter:           error              If the document was produced, this value is nil. Otherwise, it holds an NSError object describing the error.</param>		[iOSVersion(8)]		[Export("startProvidingItemAtURL")]		public void StartProvidingItemAtURL(NSURL url, Action<NSError> completionHandler) { }				/// <summary>		/// Tells the File Provider extension that a given document is no longer being accessed.		/// </summary>		/// <param name="url">The URL of a shared document.</param>		[iOSVersion(8)]		[Export("stopProvidingItemAtURL")]		public void StopProvidingItemAtURL(NSURL url) { }	}}
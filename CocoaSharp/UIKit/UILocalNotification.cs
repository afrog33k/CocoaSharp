using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// A UILocalNotification object specifies a notification that an app can schedule for presentation at a specific date and time. The operating system is responsible for delivering local notifications at their scheduled times; the app does not have to be running for this to happen. Although local notifications are similar to remote notifications in that they are used for displaying alerts, playing sounds, and badging app icons, they are composed and delivered locally and do not require connection with remote servers.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/iPhone/Reference/UILocalNotification_Class/index.html#//apple_ref/occ/cl/UILocalNotification"/>    [iOSVersion(4)]    [Export("")]    public class UILocalNotification : NSObject//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSCopying, NSObjectProtocol, Printable    {        public UILocalNotification() { }        /// <summary>        /// The date and time when the system should deliver the notification.        /// </summary>        [iOSVersion(4)]        [Export("fireDate")]        [Optional]        public NSDate FireDate { get; set; }                /// <summary>        /// The time zone of the notification’s fire date.        /// </summary>        [iOSVersion(4)]        [Export("timeZone")]        [Optional]        public NSTimeZone TimeZone { get; set; }                /// <summary>        /// The calendar interval at which to reschedule the notification.        /// </summary>        [iOSVersion(4)]        [Export("repeatInterval")]        public NSCalendarUnit RepeatInterval { get; set; }                /// <summary>        /// The calendar the system should refer to when it reschedules a repeating notification.        /// </summary>        [iOSVersion(4)]        [Export("repeatCalendar")]        [Optional]        public NSCalendar RepeatCalendar { get; set; }                /// <summary>        /// The geographic region that triggers the notification.        /// </summary>        [iOSVersion(8)]        [Export("region")]        [Unwrapped]        public CLRegion Region { get; set; }                /// <summary>        /// A Boolean value indicating whether crossing a geographic region boundary delivers only one notification.        /// </summary>        [iOSVersion(8)]        [Export("regionTriggersOnce")]        public bool RegionTriggersOnce { get; set; }                /// <summary>        /// The message displayed in the notification alert.        /// </summary>        [iOSVersion(4)]        [Export("alertBody")]        [Optional]        public string AlertBody { get; set; }                /// <summary>        /// The title of the action button or slider.        /// </summary>        [iOSVersion(4)]        [Export("alertAction")]        [Optional]        public string AlertAction { get; set; }                /// <summary>        /// A short description of the reason for the alert.        /// </summary>        [iOSVersion(8.2)]        [Export("alertTitle")]        [Unwrapped]        public string AlertTitle { get; set; }                /// <summary>        /// A Boolean value that controls whether the notification shows or hides the alert action.        /// </summary>        [iOSVersion(4)]        [Export("hasAction")]        public bool HasAction { get; set; }                /// <summary>        /// Identifies the image used as the launch image when the user taps (or slides) the action button (or slider).        /// </summary>        [iOSVersion(4)]        [Export("alertLaunchImage")]        [Optional]        public string AlertLaunchImage { get; set; }                /// <summary>        /// The name of a group of actions to display in the alert.        /// </summary>        [iOSVersion(8)]        [Export("category")]        [Optional]        public string Category { get; set; }                /// <summary>        /// The number to display as the app’s icon badge.        /// </summary>        [iOSVersion(4)]        [Export("applicationIconBadgeNumber")]        public int ApplicationIconBadgeNumber { get; set; }                /// <summary>        /// The name of the file containing the sound to play when an alert is displayed.        /// </summary>        [iOSVersion(4)]        [Export("soundName")]        [Optional]        public string SoundName { get; set; }                /// <summary>        /// A dictionary for passing custom information to the notified app.        /// </summary>        [iOSVersion(4)]        [Export("userInfo")]        public Dictionary<NSObject, AnyObject> UserInfo { get; set; }    }}
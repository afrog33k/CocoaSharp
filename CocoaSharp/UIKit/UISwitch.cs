using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// You use the UISwitch class to create and manage the On/Off buttons used, for example, in the Settings app for options such as Airplane Mode and Bluetooth. These objects are known as switches.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UISwitch_Class/index.html#//apple_ref/occ/cl/UISwitch"/>    [iOSVersion(2)]    public class UISwitch : UIControl//, AnyObject, NSCoding, NSObjectProtocol, Reflectable, UIAccessibilityIdentification, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UITraitEnvironment    {        public UISwitch() { }        /// <summary>        /// Returns an initialized switch object.        /// </summary>        /// <param name="frame">A rectangle defining the frame of the UISwitch object. The size components of this rectangle are ignored.</param>        [iOSVersion(2)]        public UISwitch(CGRect frame) { }                /// <summary>        /// Set the state of the switch to On or Off, optionally animating the transition.        /// </summary>        /// <param name="on">true if the switch should be turned to the On position; false if it should be turned to the Off position. If the switch is already in the designated position, nothing happens.</param>        /// <param name="animated">true to animate the “flipping” of the switch; otherwise false.</param>        [iOSVersion(2)]        [Export("setOn")]        public virtual void SetOn(bool on, bool animated) {  }                /// <summary>        /// A Boolean value that determines the off/on state of the switch.        /// </summary>        [iOSVersion(2)]        [Export("on")]        public bool On { get; set; }                /// <summary>        /// The color used to tint the appearance of the switch when it is turned on.        /// </summary>        [iOSVersion(5)]        [Export("onTintColor")]        public UIColor OnTintColor { get; set; }                /// <summary>        /// The color used to tint the outline of the switch when it is turned off.        /// </summary>        [iOSVersion(6)]        [Export("tintColor")]        public UIColor TintColor { get; set; }                /// <summary>        /// The color used to tint the appearance of the thumb.        /// </summary>        [iOSVersion(6)]        [Export("thumbTintColor")]        public UIColor ThumbTintColor { get; set; }                /// <summary>        /// The image displayed when the switch is in the on position.        /// </summary>        [iOSVersion(6)]        [Export("onImage")]        public UIImage OnImage { get; set; }                /// <summary>        /// The image displayed while the switch is in the off position.        /// </summary>        [iOSVersion(6)]        [Export("offImage")]        public UIImage OffImage { get; set; }    }}
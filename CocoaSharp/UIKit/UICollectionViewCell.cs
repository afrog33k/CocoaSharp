using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace UIKit{    /// <summary>    /// A UICollectionViewCell object presents the content for a single data item when that item is within the collection view’s visible bounds. You can use this class as-is or subclass it to add additional properties and methods. The layout and presentation of cells is managed by the collection view and its corresponding layout object.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UICollectionViewCell_class/index.html#//apple_ref/occ/cl/UICollectionViewCell"/>    [iOSVersion(6)]    public class UICollectionViewCell : UICollectionReusableView//, AnyObject, NSCoding, NSObjectProtocol, Reflectable, UIAccessibilityIdentification, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UITraitEnvironment    {        /// <summary>        /// The main view to which you add your cell’s custom content. (read-only)        /// </summary>        [iOSVersion(6)]        [Export("contentView")]        public UIView ContentView { get; private set; }                /// <summary>        /// The view that is displayed behind the cell’s other content.        /// </summary>        [iOSVersion(6)]        [Export("backgroundView")]        public UIView BackgroundView { get; set; }                /// <summary>        /// The view that is displayed just above the background view when the cell is selected.        /// </summary>        [iOSVersion(6)]        [Export("selectedBackgroundView")]        public UIView SelectedBackgroundView { get; set; }                /// <summary>        /// The selection state of the cell.        /// </summary>        [iOSVersion(6)]        [Export("selected")]        public bool Selected { get; set; }                /// <summary>        /// The highlight state of the cell.        /// </summary>        [iOSVersion(6)]        [Export("highlighted")]        public bool Highlighted { get; set; }    }}
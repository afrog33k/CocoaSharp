using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The UIResponderStandardEditActions informal protocol declares methods that responder classes should override to handle common editing commands invoked in the user interface, such as Copy, Paste, and Select.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIResponderStandardEditActions_Protocol/index.html#//apple_ref/doc/uid/TP40008313"/>    [iOSVersion(3)]    [Export("")]    public interface UIResponderStandardEditActions//:    {        /// <summary>        /// Copy the selection to the pasteboard.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3)]        [Export("copy")]        void Copy([Optional] AnyObject sender);                /// <summary>        /// Remove the selection from the user interface and write it to the pasteboard.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3)]        [Export("cut")]        void Cut([Optional] AnyObject sender);                /// <summary>        /// Remove the selection from the user interface.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3.2)]        [Export("delete")]        void Delete([Optional] AnyObject sender);                /// <summary>        /// Read data from the pasteboard and display it in the user interface.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3)]        [Export("paste")]        void Paste([Optional] AnyObject sender);                /// <summary>        /// Select the next object the user taps.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3)]        [Export("select")]        void Select([Optional] AnyObject sender);                /// <summary>        /// Select all objects in the current view.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(3)]        [Export("selectAll")]        void SelectAll([Optional] AnyObject sender);                /// <summary>        /// Toggle the bold style information of the selected text.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(6)]        [Export("toggleBoldface")]        void ToggleBoldface([Optional] AnyObject sender);                /// <summary>        /// Toggle the italic style information of the selected text.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(6)]        [Export("toggleItalics")]        void ToggleItalics([Optional] AnyObject sender);                /// <summary>        /// Toggle the underline style information of the selected text.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(6)]        [Export("toggleUnderline")]        void ToggleUnderline([Optional] AnyObject sender);                /// <summary>        /// Change the writing direction to left-to-right.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(5)]        [Export("makeTextWritingDirectionLeftToRight")]        void MakeTextWritingDirectionLeftToRight([Optional] AnyObject sender);                /// <summary>        /// Change the writing direction to right-to-left.        /// </summary>        /// <param name="sender">The object calling this method.</param>        [iOSVersion(5)]        [Export("makeTextWritingDirectionRightToLeft")]        void MakeTextWritingDirectionRightToLeft([Optional] AnyObject sender);    }}
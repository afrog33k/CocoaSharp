using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIObjectRestoration_protocol/index.html#//apple_ref/occ/intf/UIObjectRestoration	/// <summary>	/// The UIObjectRestoration protocol should be adopted by classes that act as &quot;restoration classes” for objects during the state restoration process. The method in this protocol should be used to return the object if it already exists or create it if needed.	/// </summary>	[iOSVersion(7)]	public interface UIObjectRestoration	{		/// <summary>		/// Asks the receiver to provide the object that corresponds to the specified identifier information. (required)		/// </summary>		/// <param name="identifierComponents">An array of NSString objects corresponding to the restoration identifiers of the desired object and all of its ancestors in the restoration hierarchy. The last value in the array is the restoration identifier of the desired object. Earlier entries represent the restoration identifiers of its ancestors.</param>		/// <param name="coder">The keyed archiver containing the app’s saved state information.</param>		/// <returns>The object to use or nil if you do not want to restore this object now.</returns>		//[iOSVersion(7)]		//[Export("objectWithRestorationIdentifierPath")]		//static UIStateRestoring ObjectWithRestorationIdentifierPath(AnyObject[] identifierComponents, NSCoder coder);	}}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The UIAccessibilityContainer informal protocol provides a way for UIView subclasses to make selected components accessible as separate elements. For example, a view might contain icons or drawn text that, to end users, appear and function as separate items. But because these components are not implemented as instances of UIView, they are not automatically accessible to users with disabilities. Therefore, such a container view should implement the  UIAccessibilityContainer methods to supply accessibility information about these components to assistive applications such as VoiceOver.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIAccessibilityContainer_Protocol/index.html#//apple_ref/doc/uid/TP40008787"/>    [iOSVersion(3)]    [Export("")]    public interface UIAccessibilityContainer//:    {        /// <summary>        /// Returns the number of accessibility elements in the container.        /// </summary>        [iOSVersion(3)]        [Export("accessibilityElementCount")]        int AccessibilityElementCount();                /// <summary>        /// Returns the accessibility element at the specified index.        /// </summary>        /// <param name="index">The index of the accessibility element.</param>        [iOSVersion(3)]        [Export("accessibilityElementAtIndex")]        [return:Unwrapped]        AnyObject AccessibilityElementAtIndex(int index);                /// <summary>        /// Returns the index of the specified accessibility element.        /// </summary>        /// <param name="element">The accessibility element.</param>        [iOSVersion(3)]        [Export("indexOfAccessibilityElement")]        int IndexOfAccessibilityElement([Unwrapped] AnyObject element);                /// <summary>        /// An array of the accessibility elements in the container.        /// </summary>        [iOSVersion(8)]        [Export("accessibilityElements")]        AnyObject[] AccessibilityElements { get; set; }    }}
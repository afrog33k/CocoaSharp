using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIStateRestoring_protocol/index.html#//apple_ref/occ/intf/UIStateRestoring	/// <summary>	/// The UIStateRestoring protocol lets you include any object in your state restoration archives. You can add state restoring objects to an archive directly or by referencing them from another object that is preserved, such as a view controller. The methods of the protocol let you save enough information about the object to find or recreate it during the next launch cycle.	/// </summary>	[iOSVersion(7)]	public interface UIStateRestoring	{		/// <summary>		/// The parent object used to scope the current object. (read-only)		/// </summary>		[iOSVersion(7)]		[Export("restorationParent")]		[Optional]		UIStateRestoring RestorationParent { get; }				/// <summary>		/// The class responsible for creating this object when restoring the app’s state. (read-only)		/// </summary>		[iOSVersion(7)]		[Export("objectRestorationClass")]		[Optional]		AnyObject.Type ObjectRestorationClass { get; }				/// <summary>		/// Encodes state-related information for the object.		/// </summary>		/// <param name="coder">The coder object to use to encode the state of the object.</param>		[iOSVersion(7)]		[Export("encodeRestorableStateWithCoder")]		[Optional]		void EncodeRestorableStateWithCoder(NSCoder coder);				/// <summary>		/// Decodes and restores state-related information for the object.		/// </summary>		/// <param name="coder">The coder object to use to decode the state of the view.</param>		[iOSVersion(7)]		[Export("decodeRestorableStateWithCoder")]		[Optional]		void DecodeRestorableStateWithCoder(NSCoder coder);				/// <summary>		/// Called after all objects have had a chance to decode their state.		/// </summary>		[iOSVersion(7)]		[Export("applicationFinishedRestoringState")]		[Optional]		void ApplicationFinishedRestoringState();				/// <summary>		/// The following keys are available in restoration archives.		/// </summary>				/// <summary>		/// The value of this key is a UIStoryboard object representing the storyboard from which a view controller was initially obtained. You do not need to write this key to the coder yourself. Each UIViewController class automatically writes this key to the coder during the state preservation process.		/// </summary>		[iOSVersion(6)]		string UIStateRestorationViewControllerStoryboardKey { get; }				/// <summary>		/// The value of this key is an NSString object that identifies the version of your app (as obtained from the CFBundleVersion key of your app’s Info.plist file) was was present when the state information was saved. You can use the value of this key to help make choices about how to proceed during state restoration. For example, if the key indicates that the state is associated with an older version of your app, you might want to avoid restoring the previous state altogether or modify the restoration process more significantly.		/// </summary>		[iOSVersion(6)]		string UIApplicationStateRestorationBundleVersionKey { get; }				/// <summary>		/// The value of this key is an NSNumber object containing one of the values for the UIUserinterfaceIdiom enum. This value reflects whether the interface that was saved was targeting the iPad or iPhone idiom.		/// </summary>		[iOSVersion(6)]		string UIApplicationStateRestorationUserinterfaceIdiomKey { get; }				/// <summary>		/// The value of this key is an NSDate object containing the date when the restoration archive was saved. The date is specified using coordinated universal time (UTC).		/// </summary>		[iOSVersion(7)]		string UIApplicationStateRestorationTimestampKey { get; }				/// <summary>		/// The value of this key is an NSString object containing the iOS system version that was installed when the archive was saved. The format of this string matches the format of the value in the systemVersion property of the UIDevice class.		/// </summary>		[iOSVersion(7)]		string UIApplicationStateRestorationSystemVersionKey { get; }	}}
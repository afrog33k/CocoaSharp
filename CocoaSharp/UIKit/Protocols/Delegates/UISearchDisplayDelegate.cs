using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UISearchDisplayDelegate_Protocol/index.html#//apple_ref/occ/intf/UISearchDisplayDelegate	/// <summary>	/// This protocol defines delegate methods for UISearchDisplayController objects.	/// </summary>	[iOSVersion(3)]	public interface UISearchDisplayDelegate	{		/// <summary>		/// Tells the delegate that the controller is about to begin searching.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		[iOSVersion(3)]		[Export("searchDisplayControllerWillBeginSearch")]		[Optional]		void SearchDisplayControllerWillBeginSearch(UISearchDisplayController controller);				/// <summary>		/// Tells the delegate that the controller has started searching.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		[iOSVersion(3)]		[Export("searchDisplayControllerDidBeginSearch")]		[Optional]		void SearchDisplayControllerDidBeginSearch(UISearchDisplayController controller);				/// <summary>		/// Tells the delegate that the controller is about to end searching.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		[iOSVersion(3)]		[Export("searchDisplayControllerWillEndSearch")]		[Optional]		void SearchDisplayControllerWillEndSearch(UISearchDisplayController controller);				/// <summary>		/// Tells the delegate that the controller has finished searching.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		[iOSVersion(3)]		[Export("searchDisplayControllerDidEndSearch")]		[Optional]		void SearchDisplayControllerDidEndSearch(UISearchDisplayController controller);				/// <summary>		/// Tells the delegate that the controller has loaded its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="didLoadSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPostLoadResultsTableView(UISearchDisplayController controller, UITableView didLoadSearchResultsTableView);				/// <summary>		/// Tells the delegate that the controller is about to unload its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="willUnloadSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPreUnloadResultsTableView(UISearchDisplayController controller, UITableView willUnloadSearchResultsTableView);				/// <summary>		/// Tells the delegate that the controller is about to display its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="willShowSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPreShowResultsTableView(UISearchDisplayController controller, UITableView willShowSearchResultsTableView);				/// <summary>		/// Tells the delegate that the controller just displayed its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="didShowSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPostShowResultsTableView(UISearchDisplayController controller, UITableView didShowSearchResultsTableView);				/// <summary>		/// Tells the delegate that the controller is about to hide its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="willHideSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPreHideResultsTableView(UISearchDisplayController controller, UITableView willHideSearchResultsTableView);				/// <summary>		/// Tells the delegate that the controller just hid its table view.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="didHideSearchResultsTableView">The search display controller’s table view.</param>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		void SearchDisplayControllerPostHideResultsTableView(UISearchDisplayController controller, UITableView didHideSearchResultsTableView);				/// <summary>		/// Asks the delegate if the table view should be reloaded for a given search string.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="shouldReloadTableForSearchString">The string in the search bar.</param>		/// <returns>true if the display controller should reload the data in its table view, otherwise false.</returns>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		bool SearchDisplayController(UISearchDisplayController controller, string shouldReloadTableForSearchString);				/// <summary>		/// Asks the delegate if the table view should be reloaded for a given scope.		/// </summary>		/// <param name="controller">The search display controller for which the receiver is the delegate.</param>		/// <param name="shouldReloadTableForSearchScope">The index of the selected scope button in the search bar.</param>		/// <returns>true if the display controller should reload the data in its table view, otherwise false.</returns>		[iOSVersion(3)]		[Export("searchDisplayController")]		[Optional]		bool SearchDisplayController(UISearchDisplayController controller, int shouldReloadTableForSearchScope);	}}
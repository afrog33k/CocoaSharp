using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The UINavigationBarDelegate protocol defines optional methods that a UINavigationBar delegate should implement to update its views when items are pushed and popped from the stack. The navigation bar represents only the bar at the top of the screen, not the view below. It’s the application’s responsibility to implement the behavior when the top item changes.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UINavigationBarDelegate_Protocol/index.html#//apple_ref/occ/intf/UINavigationBarDelegate"/>    [iOSVersion(2)]    public interface UINavigationBarDelegate//: NSObjectProtocol, UIBarPositioningDelegate    {        /// <summary>        /// Returns a Boolean value indicating whether the navigation bar should push an item.        /// </summary>        /// <param name="navigationBar">The navigation bar that the item is being pushed onto.</param>        /// <param name="shouldPushItem">The navigation item that is being pushed.</param>        //[iOSVersion(2)]        //[Export("navigationBar")]        //[Optional]        bool NavigationBar(UINavigationBar navigationBar, UINavigationItem shouldPushItem);                /// <summary>        /// Tells the delegate that an item was pushed onto the navigation bar.        /// </summary>        /// <param name="navigationBar">The navigation bar that the item is being pushed onto.</param>        /// <param name="didPushItem">The navigation item that is being pushed.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        //[iOSVersion(2)]        //[Export("navigationBar")]        //[Optional]        //[IgnoreParameter("NAME_YOUR_PARAMS")]        void NavigationBar(UINavigationBar navigationBar, UINavigationItem didPushItem, bool NAME_YOUR_PARAMS = false);                /// <summary>        /// Returns a Boolean value indicating whether the navigation bar should pop an item.        /// </summary>        /// <param name="navigationBar">The navigation bar that the item is being popped from.</param>        /// <param name="shouldPopItem">The navigation item that is being popped.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        //[iOSVersion(2)]        //[Export("navigationBar")]        //[Optional]        //[IgnoreParameter("NAME_YOUR_PARAMS")]        bool NavigationBar(UINavigationBar navigationBar, UINavigationItem shouldPopItem, int NAME_YOUR_PARAMS = 0);                /// <summary>        /// Tells the delegate that an item was popped from the navigation bar.        /// </summary>        /// <param name="navigationBar">The navigation bar that the item is being popped from.</param>        /// <param name="didPopItem">The navigation item that is being popped.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        //[iOSVersion(2)]        //[Export("navigationBar")]        //[Optional]        //[IgnoreParameter("NAME_YOUR_PARAMS")]        void NavigationBar(UINavigationBar navigationBar, UINavigationItem didPopItem, string NAME_YOUR_PARAMS = "");    }}
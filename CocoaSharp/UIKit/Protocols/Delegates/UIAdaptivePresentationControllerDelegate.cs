using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace UIKit{    /// <summary>    /// An object that conforms to the UIAdaptivePresentationControllerDelegate protocol works with a presentation controller to determine how to respond to size changes in your app. The delegate object is consulted only for presentations that use the UIModalPresentationFormSheet, UIModalPresentationPopover, or UIModalPresentationCustom style. Your delegate can suggest both a new full-screen presentation style and an entirely new view controller for the content.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIAdaptivePresentationControllerDelegate_protocol/index.html#//apple_ref/occ/intf/UIAdaptivePresentationControllerDelegate"/>    [iOSVersion(8)]    public interface UIAdaptivePresentationControllerDelegate//: NSObjectProtocol    {        /// <summary>        /// Asks the delegate for the new presentation style to use.        /// </summary>        /// <param name="controller">The presentation controller that is managing the size change. Use this object to retrieve the view controllers involved in the presentation.</param>        [iOSVersion(8)]        [Export("adaptivePresentationStyleForPresentationController")]        UIModalPresentationStyle AdaptivePresentationStyleForPresentationController(UIPresentationController controller);                /// <summary>        /// Asks the delegate for the view controller to use when adapting from the specified presentation style.        /// </summary>        /// <param name="controller">The presentation controller that is managing the size class change.</param>        /// <param name="viewControllerForAdaptivePresentationStyle">The new presentation style being employed for the view controller.</param>        [iOSVersion(8)]        [Export("presentationController")]        UIViewController PresentationController(UIPresentationController controller, UIModalPresentationStyle viewControllerForAdaptivePresentationStyle);    }}
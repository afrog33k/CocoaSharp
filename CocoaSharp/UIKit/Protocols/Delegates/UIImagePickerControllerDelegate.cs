using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIImagePickerControllerDelegate_Protocol/index.html#//apple_ref/occ/intf/UIImagePickerControllerDelegate	/// <summary>	/// The UIImagePickerControllerDelegate protocol defines methods that your delegate object must implement to interact with the image picker interface. The methods of this protocol notify your delegate when the user either picks an image or movie, or cancels the picker operation.	/// </summary>	[iOSVersion(2)]	public interface UIImagePickerControllerDelegate	{		/// <summary>		/// Tells the delegate that the user picked a still image or movie.		/// </summary>		/// <param name="picker">The controller object managing the image picker interface.</param>		/// <param name="didFinishPickingMediaWithInfo">A dictionary containing the original image and the edited image, if an image was picked; or a filesystem URL for the movie, if a movie was picked. The dictionary also contains any relevant editing information. The keys for this dictionary are listed in Editing Information Keys.</param>		[iOSVersion(3)]		[Export("imagePickerController")]		[Optional]		void ImagePickerController(UIImagePickerController picker, NSDictionary didFinishPickingMediaWithInfo);				/// <summary>		/// Tells the delegate that the user picked an image.				 		  Deprecation Statement		  		 Use imagePickerController:didFinishPickingMediaWithInfo: instead.		/// </summary>		/// <param name="picker">The controller object managing the image picker interface.</param>		/// <param name="didFinishPickingImage">The image that the user picked. If user editing is enabled, this may be a cropped and adjusted version of the original image. In this case, the original image, and the editing information, are available in the editingInfo parameter.</param>		/// <param name="editingInfo">A dictionary containing any relevant editing information. If editing is disabled, this parameter is nil. The keys for this dictionary are listed in Editing Information Keys.</param>		[Obsolete]		[iOSVersion(2)]		[Export("imagePickerController")]		[Optional]		void ImagePickerController(UIImagePickerController picker, UIImage didFinishPickingImage, NSDictionary editingInfo);				/// <summary>		/// Tells the delegate that the user cancelled the pick operation.		/// </summary>		/// <param name="picker">The controller object managing the image picker interface.</param>		[iOSVersion(2)]		[Export("imagePickerControllerDidCancel")]		[Optional]		void ImagePickerControllerDidCancel(UIImagePickerController picker);				/// <summary>		/// Keys for the editing information dictionary passed to the delegate.		/// </summary>				/// <summary>		/// Specifies the media type selected by the user.		/// </summary>		[iOSVersion(3)]		string UIImagePickerControllerMediaType { get; }				/// <summary>		/// Specifies the original, uncropped image selected by the user.		/// </summary>		[iOSVersion(2)]		string UIImagePickerControllerOriginalImage { get; }				/// <summary>		/// Specifies an image edited by the user.		/// </summary>		[iOSVersion(3)]		string UIImagePickerControllerEditedImage { get; }				/// <summary>		/// Specifies the cropping rectangle that was applied to the original image.		/// </summary>		[iOSVersion(2)]		string UIImagePickerControllerCropRect { get; }				/// <summary>		/// Specifies the filesystem URL for the movie.		/// </summary>		[iOSVersion(3)]		string UIImagePickerControllerMediaURL { get; }				/// <summary>		/// The Assets Library URL for the original version of the picked item.		/// </summary>		[iOSVersion(4.1)]		string UIImagePickerControllerReferenceURL { get; }				/// <summary>		/// Metadata for a newly-captured photograph.		/// </summary>		[iOSVersion(4.1)]		string UIImagePickerControllerMediaMetadata { get; }	}}
using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextFieldDelegate_Protocol/index.html#//apple_ref/occ/intf/UITextFieldDelegate	/// <summary>	/// The UITextFieldDelegate protocol defines the messages sent to a text field delegate as part of the sequence of editing its text. All of the methods of this protocol are optional.	/// </summary>	[iOSVersion(2)]	public interface UITextFieldDelegate	{		/// <summary>		/// Asks the delegate if editing should begin in the specified text field.		/// </summary>		/// <param name="textField">The text field for which editing is about to begin.</param>		/// <returns>true if an editing session should be initiated; otherwise, false to disallow editing.</returns>		[iOSVersion(2)]		[Export("textFieldShouldBeginEditing")]		[Optional]		bool TextFieldShouldBeginEditing(UITextField textField);				/// <summary>		/// Tells the delegate that editing began for the specified text field.		/// </summary>		/// <param name="textField">The text field for which an editing session began.</param>		[iOSVersion(2)]		[Export("textFieldDidBeginEditing")]		[Optional]		void TextFieldDidBeginEditing(UITextField textField);				/// <summary>		/// Asks the delegate if editing should stop in the specified text field.		/// </summary>		/// <param name="textField">The text field for which editing is about to end.</param>		/// <returns>true if editing should stop; otherwise, false if the editing session should continue</returns>		[iOSVersion(2)]		[Export("textFieldShouldEndEditing")]		[Optional]		bool TextFieldShouldEndEditing(UITextField textField);				/// <summary>		/// Tells the delegate that editing stopped for the specified text field.		/// </summary>		/// <param name="textField">The text field for which editing ended.</param>		[iOSVersion(2)]		[Export("textFieldDidEndEditing")]		[Optional]		void TextFieldDidEndEditing(UITextField textField);				/// <summary>		/// Asks the delegate if the specified text should be changed.		/// </summary>		/// <param name="textField">The text field containing the text.</param>		/// <param name="shouldChangeCharactersInRange">The range of characters to be replaced</param>		/// <param name="replacementString">The replacement string.</param>		/// <returns>true if the specified text range should be replaced; otherwise, false to keep the old text.</returns>		[iOSVersion(2)]		[Export("textField")]		[Optional]		bool TextField(UITextField textField, NSRange shouldChangeCharactersInRange, string replacementString);				/// <summary>		/// Asks the delegate if the text field’s current contents should be removed.		/// </summary>		/// <param name="textField">The text field containing the text.</param>		/// <returns>true if the text field’s contents should be cleared; otherwise, false.</returns>		[iOSVersion(2)]		[Export("textFieldShouldClear")]		[Optional]		bool TextFieldShouldClear(UITextField textField);				/// <summary>		/// Asks the delegate if the text field should process the pressing of the return button.		/// </summary>		/// <param name="textField">The text field whose return button was pressed.</param>		/// <returns>true if the text field should implement its default behavior for the return button; otherwise, false.</returns>		[iOSVersion(2)]		[Export("textFieldShouldReturn")]		[Optional]		bool TextFieldShouldReturn(UITextField textField);	}}
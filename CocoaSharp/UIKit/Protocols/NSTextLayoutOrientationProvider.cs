using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The NSTextLayoutOrientationProvider protocol defines an interface providing the default orientation for text laid out in a conforming object, in absence of an explicit NSVerticalGlyphFormAttributeName attribute. The only UIKit class that implements this interface is NSTextContainer, whose default implementation returns NSTextLayoutOrientationHorizontal. An NSTextContainer subclass that handles vertical text could set this property to NSTextLayoutOrientationVertical to support the custom layout orientation logic.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/NSTextLayoutOrientationProvider_Protocol_TextKit/index.html#//apple_ref/occ/intf/NSTextLayoutOrientationProvider"/>    [iOSVersion(7)]    public interface NSTextLayoutOrientationProvider//:    {        /// <summary>        /// The receiverâ€™s layout orientation. (required)        /// </summary>        [iOSVersion(7)]        [Export("layoutOrientation")]        NSTextLayoutOrientation LayoutOrientation { get; set; }    }}
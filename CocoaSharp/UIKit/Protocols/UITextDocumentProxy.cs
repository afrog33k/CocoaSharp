using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// A text document proxy provides textual context to a custom keyboard (which is based on the UIInputViewController class) by way of the keyboardâ€™s textDocumentProxy property.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextDocumentProxy_Protocol/index.html#//apple_ref/occ/intf/UITextDocumentProxy"/>    [iOSVersion(8)]    [Export("")]    public interface UITextDocumentProxy//: NSObjectProtocol, UIKeyInput, UITextInputTraits    {        /// <summary>        /// Moves the insertion point forward or backward in the current text input object. (required)        /// </summary>        /// <param name="offset">The number of characters to adjust the insertion point by. A positive value moves the insertion point forward (according to the text storage direction for the current language). A negative value moves the insertion point backward.</param>        [iOSVersion(8)]        [Export("adjustTextPositionByCharacterOffset")]        void AdjustTextPositionByCharacterOffset(int offset);                /// <summary>        /// Textual context after the insertion point in the current text input object. (required) (read-only)        /// </summary>        [iOSVersion(8)]        [Export("documentContextAfterInput")]        [Unwrapped]        string DocumentContextAfterInput { get; }                /// <summary>        /// Textual context before the insertion point in the current text input object. (required) (read-only)        /// </summary>        [iOSVersion(8)]        [Export("documentContextBeforeInput")]        [Unwrapped]        string DocumentContextBeforeInput { get; }    }}
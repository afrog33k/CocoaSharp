using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIDynamicAnimatorDelegate_Protocol/index.html#//apple_ref/occ/intf/UIDynamicAnimatorDelegate	/// <summary>	/// To respond to the pausing or resumption of UIKit dynamic animation, configure a custom class to adopt the UIDynamicAnimatorDelegate protocol. Then, in a dynamic animator (an instance of the UIDynamicAnimator class), set the delegate to be an instance of your custom class.	/// </summary>	[iOSVersion(7)]	public interface UIDynamicAnimatorDelegate	{		/// <summary>		/// Called when a dynamic animator pauses the animations for its behaviors’ associated dynamic items. (required)		/// </summary>		/// <param name="animator">The dynamic animator that paused its animation.</param>		[iOSVersion(7)]		[Export("dynamicAnimatorDidPause")]		[Optional]		void DynamicAnimatorDidPause(UIDynamicAnimator animator);				/// <summary>		/// Called when a dynamic animator is about to resume the animations for its behaviors’ associated dynamic items. (required)		/// </summary>		/// <param name="animator">The dynamic animator that is about to resume animation.</param>		[iOSVersion(7)]		[Export("dynamicAnimatorWillResume")]		[Optional]		void DynamicAnimatorWillResume(UIDynamicAnimator animator);	}}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The UICoordinateSpace protocol defines methods for converting between different frames of reference on a screen. The UIView and UIScreen classes adopt this protocol so that you can convert easily between most coordinate spaces in your app. The UIScreen class also provides coordinate space with a fixed frame of reference for tasks that require it. You can adopt this protocol in your own classes to convert between your custom coordinate spaces and the coordinate spaces of your app’s views and screens.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UICoordinateSpace_protocol/index.html#//apple_ref/occ/intf/UICoordinateSpace"/>    [iOSVersion(8)]    [Export("UICoordinateSpace")]    public interface IUICoordinateSpace//: NSObjectProtocol    {        /// <summary>        /// Converts a point from the coordinate space of the current object to the specified coordinate space. (required)        /// </summary>        /// <param name="point">A point specified in the coordinate system of the current object.</param>        /// <param name="toCoordinateSpace">The coordinate space into which point is to be converted.</param>        [iOSVersion(8)]        [Export("convertPoint")]        CGPoint ConvertPoint(CGPoint point, IUICoordinateSpace toCoordinateSpace);                /// <summary>        /// Converts a point from the specified coordinate space to the coordinate space of the current object. (required)        /// </summary>        /// <param name="point">A point in the specified coordinate space.</param>        /// <param name="fromCoordinateSpace">The coordinate space in which point is specified.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        [iOSVersion(8)]        [Export("convertPoint")]        [IgnoreParameter("NAME_YOUR_PARAMS")]        CGPoint ConvertPoint(CGPoint point, IUICoordinateSpace fromCoordinateSpace, bool NAME_YOUR_PARAMS = false);                /// <summary>        /// Converts a rectangle from the coordinate space of the current object to the specified coordinate space. (required)        /// </summary>        /// <param name="rect">A rectangle specified in the coordinate system of the current object.</param>        /// <param name="toCoordinateSpace">The coordinate space into which rect is to be converted.</param>        [iOSVersion(8)]        [Export("convertRect")]        CGRect ConvertRect(CGRect rect, IUICoordinateSpace toCoordinateSpace);                /// <summary>        /// Converts a rectangle from the specified coordinate space to the coordinate space of the current object. (required)        /// </summary>        /// <param name="rect">A rectangle in the specified coordinate space.</param>        /// <param name="fromCoordinateSpace">The coordinate space in which rect is specified.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        [iOSVersion(8)]        [Export("convertRect")]        [IgnoreParameter("NAME_YOUR_PARAMS")]        CGRect ConvertRect(CGRect rect, IUICoordinateSpace fromCoordinateSpace, bool NAME_YOUR_PARAMS = false);                /// <summary>        /// The bounds rectangle describing the item’s location and size in its own coordinate system. (required) (read-only)        /// </summary>        [iOSVersion(8)]        [Export("bounds")]        CGRect Bounds { get; }    }}
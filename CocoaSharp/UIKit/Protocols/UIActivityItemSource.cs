using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIActivityItemSource_protocol/index.html#//apple_ref/occ/intf/UIActivityItemSource	/// <summary>	/// The UIActivityItemSource protocol defines the methods used by a UIActivityViewController object to retrieve the data items to act on. You can use this protocol in situations where you want to provide the data from one of your appâ€™s existing objects instead of creating a separate UIActivityItemProvider object. When implementing this protocol, your object becomes the data provider, providing the view controller with access to the items.	/// </summary>	[iOSVersion(6)]	public interface UIActivityItemSource	{		/// <summary>		/// Returns the placeholder object for the data. (required)		/// </summary>		/// <param name="activityViewController">The activity view controller object requesting the placeholder item.</param>		/// <returns>An object to use as a placeholder for the actual data.</returns>		[iOSVersion(6)]		[Export("activityViewControllerPlaceholderItem")]		AnyObject ActivityViewControllerPlaceholderItem(UIActivityViewController activityViewController);				/// <summary>		/// Returns the data object to be acted upon. (required)		/// </summary>		/// <param name="activityViewController">The activity view controller object requesting the data item.</param>		/// <param name="itemForActivityType">The type of activity to be performed with the data object. You can use this string to decide how best to prepare the data object.</param>		/// <returns>The final data object to be acted on. May be nil if multiple items were registered for a single activity type, so long as one of the items returns an actual value.</returns>		[iOSVersion(6)]		[Export("activityViewController")]		AnyObject ActivityViewController(UIActivityViewController activityViewController, string itemForActivityType);				/// <summary>		/// For activities that support a subject field, returns the subject for the item.		/// </summary>		/// <param name="activityViewController">The activity view controller object requesting information about the data item.</param>		/// <param name="subjectForActivityType">The selected activity type; may be nil.</param>		/// <returns>A string to use as the contents of the subject field.</returns>		[iOSVersion(7)]		[Export("activityViewController")]		[Optional]		string ActivityViewController(UIActivityViewController activityViewController, string subjectForActivityType);				/// <summary>		/// For items that are provided as NSData, returns the UTI for the item.		/// </summary>		/// <param name="activityViewController">The activity view controller object requesting information about the data item.</param>		/// <param name="dataTypeIdentifierForActivityType">The selected activity type; may be nil.</param>		/// <returns>The UTI for the item.</returns>		[iOSVersion(7)]		[Export("activityViewController")]		[Optional]		string ActivityViewController(UIActivityViewController activityViewController, string dataTypeIdentifierForActivityType);				/// <summary>		/// For activities that support a preview image, returns a thumbnail preview image for the item.		/// </summary>		/// <param name="activityViewController">The activity view controller object requesting information about the data item.</param>		/// <param name="thumbnailImageForActivityType">The selected activity type.</param>		/// <param name="suggestedSize">The suggested size for the thumbnail image, in points. You should provide an image using the appropriate scale for the screen. Images provided at the suggested size will result in the best experience.</param>		/// <returns>The image to use as a preview for the item.</returns>		[iOSVersion(7)]		[Export("activityViewController")]		[Optional]		UIImage ActivityViewController(UIActivityViewController activityViewController, string thumbnailImageForActivityType, CGSize suggestedSize);	}}
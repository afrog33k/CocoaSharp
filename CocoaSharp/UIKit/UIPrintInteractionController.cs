using CoreGraphics;
using ObjectiveC;using System;using SwiftSharp.Attributes;using Foundation;namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIPrintinteractionController_Class/index.html#//apple_ref/occ/cl/UIPrintinteractionController	/// <summary>	/// The shared instance of the UIPrintinteractionController class presents a printing user interface and manages the printing of documents, images, and other printable content in iOS.	/// </summary>	[iOSVersion(4.2)]	public class UIPrintinteractionController : NSObject	{		/// <summary>		/// Returns the shared print-interaction controller object.		/// </summary>		/// <returns>The singleton instance of the UIPrintinteractionController class or nil if the object could not be created.</returns>		[iOSVersion(4.2)]		[Export("sharedPrintController")]		public static UIPrintinteractionController SharedPrintController() { return null; }				/// <summary>		/// Returns a Boolean indicating whether the device supports printing.		/// </summary>		/// <returns>true if the device supports printing, otherwise false. An application can show or hide any print buttons based on this value.</returns>		[iOSVersion(4.2)]		[Export("isPrintingAvailable")]		public static bool IsPrintingAvailable() { return false; }				/// <summary>		/// Returns whether UIKit can print the contents of a data object.		/// </summary>		/// <param name="data">An instance of the NSData class that contains PDF data or an image in a format supported by the Image I/O framework. See Supported Image Formats in View Programming Guide for iOS for a list of the supported image formats.</param>		/// <returns>true if UIKit can print the contents of the data object, otherwise false. The method returns false if data is PDF data that specifies that printing is not allowed.</returns>		[iOSVersion(4.2)]		[Export("canPrintData")]		public static bool CanPrintData(NSData data) { return false; }				/// <summary>		/// Returns whether UIKit can print the file referenced by a URL.		/// </summary>		/// <param name="url">An object representing a URL. Valid NSURL objects must use the file: or assets-library: scheme or any scheme that can return an NSData object with a registered protocol. The file referenced by the URL must contain PDF data or an image in a format supported by the Image I/O framework. See Supported Image Formats in View Programming Guide for iOS for a list of the supported image formats.</param>		/// <returns>true if UIKit can print the contents of the referenced file, otherwise false. The method returns false if url references PDF data that specifies that printing is not allowed.</returns>		[iOSVersion(4.2)]		[Export("canPrintURL")]		public static bool CanPrintURL(NSURL url) { return false; }				/// <summary>		/// Returns a set of the Uniform Type Identifiers for the types of data that UIKit can print.		/// </summary>		/// <returns>A set object that contains, as strings, the UTIs identifying data types that UIKit knows how to print natively.</returns>		[iOSVersion(4.2)]		[Export("printableUTIs")]		public static NSSet PrintableUTIs() { return null; }				/// <summary>		/// A single ready-to-print object.		/// </summary>		[iOSVersion(4.2)]		[Export("printingItem")]		public AnyObject PrintingItem { get; set; }				/// <summary>		/// An array of ready-to-print objects.		/// </summary>		[iOSVersion(4.2)]		[Export("printingItems")]		public AnyObject[] PrintingItems { get; set; }				/// <summary>		/// An object that draws pages of printable content when requested by UIKit.		/// </summary>		[iOSVersion(4.2)]		[Export("printPageRenderer")]		public UIPrintPageRenderer PrintPageRenderer { get; set; }				/// <summary>		/// An object that lays out the content of pages based on the kind of content.		/// </summary>		[iOSVersion(4.2)]		[Export("printFormatter")]		public UIPrintFormatter PrintFormatter { get; set; }				/// <summary>		/// Presents the iPhone printing user interface in a sheet that can be animated to slide up from the bottom of the screen.		/// </summary>		/// <param name="animated">true to animate the display of the sheet, false to display the sheet immediately.</param>		/// <param name="completionHandler">A block of type UIPrintinteractionCompletionHandler that you implement to handle the conclusion of the print job (for instance, to reset state) and to handle any errors encountered in printing.</param>		[iOSVersion(4.2)]		[Export("presentAnimated")]		public bool PresentAnimated(bool animated, UIPrintinteractionCompletionHandler completionHandler) { return false; }				/// <summary>		/// Presents the iPad printing user interface in a popover view that can be animated from a bar-button item.		/// </summary>		/// <param name="item">The UIBarButtonItem object that the user tapped for printing. You are encouraged to use the constant UIBarButtonSystemItemAction when creating a bar-button item for this purpose.</param>		/// <param name="animated">true to animate the printing popover view from item, false to display it immediately.</param>		/// <param name="completionHandler">A block of type UIPrintinteractionCompletionHandler that you implement to handle the conclusion of the print job (for instance, to reset state) and to handle any errors encountered in printing.</param>		[iOSVersion(4.2)]		[Export("presentFromBarButtonItem")]		public bool PresentFromBarButtonItem(UIBarButtonItem item, bool animated, UIPrintinteractionCompletionHandler completionHandler) { return false; }				/// <summary>		/// Presents the iPad printing user interface in a popover view that can be animated from any area in a view.		/// </summary>		/// <param name="rect">A rectangle that defines the area from which the printing popover view is animated.</param>		/// <param name="inView">The view providing the coordinate system for rect.</param>		/// <param name="animated">true to animate the printing popover view from item, false to display it immediately.</param>		/// <param name="completionHandler">A block of type UIPrintinteractionCompletionHandler that you implement to handle the conclusion of the print job (for instance, to reset state) and to handle any errors encountered in printing.</param>		[iOSVersion(4.2)]		[Export("presentFromRect")]		public bool PresentFromRect(CGRect rect, UIView inView, bool animated, UIPrintinteractionCompletionHandler completionHandler) { return false; }				/// <summary>		/// Dismisses the printing-options sheet or popover.		/// </summary>		/// <param name="animated">true to animate the dismissal, otherwise false.</param>		[iOSVersion(4.2)]		[Export("dismissAnimated")]		public void DismissAnimated(bool animated) { }				/// <summary>		/// Print directly to the specified printer.		/// </summary>		/// <param name="printer">The printer to use for printing. You can obtain a list of available printers using a UIPrinterPickerController object.</param>		/// <param name="completionHandler">The block to execute when the print operation finishes.</param>		/// <returns>true if printing was successful or false if there was a problem.</returns>		[iOSVersion(8)]		[Export("printToPrinter")]		public bool PrintToPrinter(UIPrinter printer, UIPrintinteractionCompletionHandler completionHandler) { return false; }				/// <summary>		/// An object encapsulating information about the print job.		/// </summary>		[iOSVersion(4.2)]		[Export("printInfo")]		public UIPrintInfo PrintInfo { get; set; }				/// <summary>		/// An object representing the paper size and printing area for the print job. (read-only)		/// </summary>		[iOSVersion(4.2)]		[Export("printPaper")]		public UIPrintPaper PrintPaper { get; private set; }				/// <summary>		/// A Boolean value that determines whether the printing options include the number of copies.		/// </summary>		[iOSVersion(7)]		[Export("showsNumberOfCopies")]		public bool ShowsNumberOfCopies { get; set; }				/// <summary>		/// A Boolean value that determines whether the printing options include a page-range control.		/// </summary>		[iOSVersion(4.2)]		[Export("showsPageRange")]		public bool ShowsPageRange { get; set; }				/// <summary>		/// A Boolean value for enabling the paper selection menu.		/// </summary>		[iOSVersion(8)]		[Export("showsPaperSelectionForLoadedPapers")]		public bool ShowsPaperSelectionForLoadedPapers { get; set; }				/// <summary>		/// The delegate of the print interaction controller.		/// </summary>		[iOSVersion(4.2)]		[Export("delegate")]		public UIPrintinteractionControllerDelegate Delegate { get; set; }				/// <summary>		/// The error domain for printer errors		/// </summary>		[Export("UIPrintErrorDomain")]		public string UIPrintErrorDomain { get; private set; }				/// <summary>		/// Error codes for UIKit printing errors.		/// </summary>				/// <summary>		/// The device does not support printing.		/// </summary>		[iOSVersion(4.2)]		public int UIPrintingNotAvailableError { get; private set; }				/// <summary>		/// No print formatter, page renderer, printing item or printing items was assigned for printing.		/// </summary>		[iOSVersion(4.2)]		public int UIPrintNoContentError { get; private set; }				/// <summary>		/// An image is in a format not recognized by UIKit for printing.		/// </summary>		[iOSVersion(4.2)]		public int UIPrintUnknownImageFormatError { get; private set; }				/// <summary>		/// An internal error occurred with the print job.		/// </summary>		[iOSVersion(4.2)]		public int UIPrintJobFailedError { get; private set; }	}}
using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// Use the UIAlertView class to display an alert message to the user. An alert view functions similar to but differs in appearance from an action sheet (an instance of UIActionSheet).    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIAlertView_Class/index.html#//apple_ref/occ/cl/UIAlertView"/>    [iOSVersion(2)]    public class UIAlertView : UIView//, AnyObject, NSCoding, NSObjectProtocol, Reflectable, UIAccessibilityIdentification, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UITraitEnvironment    {        /// <summary>        /// Convenience method for initializing an alert view.        /// </summary>        /// <param name="title">The string that appears in the receiver’s title bar.</param>        /// <param name="message">Descriptive text that provides more details than the title.</param>        /// <param name="@delegate">The receiver’s delegate or nil if it doesn’t have a delegate.</param>        /// <param name="cancelButtonTitle">The title of the cancel button or nil if there is no cancel button.         ///   Using this argument is equivalent to setting the cancel button index to the value returned by invoking addButtonWithTitle: specifying this title.</param>        [iOSVersion(2)]        public UIAlertView(string title, string message, AnyObject @delegate, string cancelButtonTitle) : base(new CGRect()) { }                /// <summary>        /// Adds a button to the receiver with the given title.        /// </summary>        /// <param name="title">The title of the new button.</param>        [iOSVersion(2)]        [Export("addButtonWithTitle")]        public int AddButtonWithTitle(string title) { return default(int); }                /// <summary>        /// Returns the title of the button at the given index.        /// </summary>        /// <param name="buttonIndex">The index of the button. The button indices start at 0.</param>        [iOSVersion(2)]        [Export("buttonTitleAtIndex")]        public string ButtonTitleAtIndex(int buttonIndex) { return default(string); }                /// <summary>        /// Returns the text field at the given index        /// </summary>        /// <param name="textFieldIndex">The index of the text field. The text field indices start at 0.</param>        [iOSVersion(5)]        [Export("textFieldAtIndex")]        public UITextField TextFieldAtIndex(int textFieldIndex) { return default(UITextField); }                /// <summary>        /// Displays the receiver using animation.        /// </summary>        [iOSVersion(2)]        [Export("show")]        public void Show() {  }                /// <summary>        /// Dismisses the receiver, optionally with animation.        /// </summary>        /// <param name="buttonIndex">The index of the button that was clicked just before invoking this method. The button indices start at 0.</param>        /// <param name="animated">true if the receiver should be removed by animating it first; otherwise, false if it should be removed immediately with no animation.</param>        [iOSVersion(2)]        [Export("dismissWithClickedButtonIndex")]        public void DismissWithClickedButtonIndex(int buttonIndex, bool animated) {  }                /// <summary>        /// The receiver’s delegate or nil if it doesn’t have a delegate.        /// </summary>        [iOSVersion(2)]        [Export("delegate")]        public AnyObject Delegate { get; set; }                /// <summary>        /// The kind of alert displayed to the user.        /// </summary>        [iOSVersion(5)]        [Export("alertViewStyle")]        public UIAlertViewStyle AlertViewStyle { get; set; }                /// <summary>        /// The string that appears in the receiver’s title bar.        /// </summary>        [iOSVersion(2)]        [Export("title")]        public string Title { get; set; }                /// <summary>        /// Descriptive text that provides more details than the title.        /// </summary>        [iOSVersion(2)]        [Export("message")]        public string Message { get; set; }                /// <summary>        /// A Boolean value that indicates whether the receiver is displayed. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("visible")]        public bool Visible { get; private set; }                /// <summary>        /// The number of buttons on the alert view. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("numberOfButtons")]        public int NumberOfButtons { get; private set; }                /// <summary>        /// The index number of the cancel button.        /// </summary>        [iOSVersion(2)]        [Export("cancelButtonIndex")]        public int CancelButtonIndex { get; set; }                /// <summary>        /// The index of the first other button. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("firstOtherButtonIndex")]        public int FirstOtherButtonIndex { get; private set; }    }    /// <summary>    /// The presentation style of the alert.    /// </summary>    [iOSVersion(5)]    public enum UIAlertViewStyle    {        /// <summary>        /// A standard alert.        /// </summary>        [iOSVersion(5)]        Default,        /// <summary>        /// An alert that allows the user to enter text. The text field is obscured.        /// </summary>        [iOSVersion(5)]        SecureTextInput,        /// <summary>        /// An alert that allows the user to enter text.        /// </summary>        [iOSVersion(5)]        PlainTextInput,        /// <summary>        /// An alert that allows the user to enter a login identifier and password.        /// </summary>        [iOSVersion(5)]        LoginAndPasswordInput,    }}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// The UIActivityViewController class is a standard view controller that you can use to offer various services from your application. The system provides several standard services, such as copying items to the pasteboard, posting content to social media sites, sending items via email or SMS, and more. Apps can also define custom services.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIActivityViewController_Class/index.html#//apple_ref/occ/cl/UIActivityViewController"/>    [iOSVersion(6)]    public class UIActivityViewController : UIViewController//, AnyObject, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, UIAppearanceContainer, UIContentContainer, UIStateRestoring, UITraitEnvironment    {        public UIActivityViewController() { }        /// <summary>        /// Initializes and returns a new activity view controller object that acts on the specified data.        /// </summary>        /// <param name="activityItems">The array of data objects on which to perform the activity. The type of objects in the array is variable and dependent on the data your application manages. For example, the data might consist of one or more string or image objects representing the currently selected content.          ///   Instead of actual data objects, the objects in this array can be objects that adopt the UIActivityItemSource protocol, such as UIActivityItemProvider objects. Source and provider objects act as proxies for the corresponding data in situations where you do not want to provide that data until it is needed.        ///   This array must not be nil and must contain at least one object.</param>        /// <param name="applicationActivities">An array of UIActivity objects representing the custom services that your application supports. This parameter may be nil.</param>        [iOSVersion(6)]        public UIActivityViewController(AnyObject[] activityItems, AnyObject[] applicationActivities) { }                /// <summary>        /// The completion handler to execute after the activity view controller is dismissed.        /// </summary>        [iOSVersion(6)]        [Export("completionHandler")]        public UIActivityViewControllerCompletionHandler CompletionHandler { get; set; }                /// <summary>        /// The list of services that should not be displayed.        /// </summary>        [iOSVersion(6)]        [Export("excludedActivityTypes")]        public AnyObject[] ExcludedActivityTypes { get; set; }    }    /// <summary>    /// A completion handler to execute after the activity view controller is dismissed.    /// </summary>    [iOSVersion(6)]    public struct UIActivityViewControllerCompletionHandler    {        static public implicit operator UIActivityViewControllerCompletionHandler(WEIRD value)        {            return default(UIActivityViewControllerCompletionHandler);        }        static public implicit operator WEIRD(UIActivityViewControllerCompletionHandler value)        {            return default(WEIRD);        }    }}
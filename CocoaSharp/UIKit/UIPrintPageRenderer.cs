using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// A UIPrintPageRenderer object draws pages of content that are to be printed, with or without the assistance of print formatters.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/iPhone/Reference/UIPrintPageRenderer_Class/index.html#//apple_ref/occ/cl/UIPrintPageRenderer"/>    [iOSVersion(4.2)]    public class UIPrintPageRenderer : NSObject//, AnyObject, NSObjectProtocol    {        public UIPrintPageRenderer() { }        /// <summary>        /// The number of pages to render.        /// </summary>        [iOSVersion(4.2)]        [Export("numberOfPages")]        public virtual int NumberOfPages() { return default(int); }                /// <summary>        /// Adds a print formatter to the page renderer starting at the specified page.        /// </summary>        /// <param name="formatter">The UIPrintFormatter object to add to the page renderer. A print formatter can be an instance of UISimpleTextPrintFormatter, UIMarkupTextPrintFormatter, or UIViewPrintFormatter.</param>        /// <param name="startingAtPageAtIndex">The index identifying the first page with which the print formatter should be associated with. This value overrides the startPage property of the print formatter.</param>        [iOSVersion(4.2)]        [Export("addPrintFormatter")]        public virtual void AddPrintFormatter(UIPrintFormatter formatter, int startingAtPageAtIndex) {  }                /// <summary>        /// Returns the print formatters associated with a specified page.        /// </summary>        /// <param name="pageIndex">The index of a page of printable content.</param>        [iOSVersion(4.2)]        [Export("printFormattersForPageAtIndex")]        public virtual AnyObject[] PrintFormattersForPageAtIndex(int pageIndex) { return default(AnyObject[]); }                /// <summary>        /// Overridden by the page renderer to prepare for drawing a range of pages.        /// </summary>        /// <param name="range">A range of pages.</param>        [iOSVersion(4.2)]        [Export("prepareForDrawingPages")]        public virtual void PrepareForDrawingPages(NSRange range) {  }                /// <summary>        /// Overridden to draw a given page of content for the printer.        /// </summary>        /// <param name="index">The index of the page to draw.</param>        /// <param name="inRect">The rectangle in which printable content can be drawn.</param>        [iOSVersion(4.2)]        [Export("drawPageAtIndex")]        public virtual void DrawPageAtIndex(int index, CGRect inRect) {  }                /// <summary>        /// Overridden to draw the header of the given page.        /// </summary>        /// <param name="index">The index of the page in which to draw the header.</param>        /// <param name="inRect">The rectangle in which the header content should be drawn. It is specified in the coordinate system of the paper rectangle (paperRect); that is, the origin of coordinates is at the top-left corner of the sheet.</param>        [iOSVersion(4.2)]        [Export("drawHeaderForPageAtIndex")]        public virtual void DrawHeaderForPageAtIndex(int index, CGRect inRect) {  }                /// <summary>        /// Overridden to draw the content of the given page.        /// </summary>        /// <param name="index">The index of the page in which to draw content.</param>        /// <param name="inRect">The area in which content is to be drawn, specified in the coordinate system of the printable rectangle. This is the area defined by printableRect minus headerHeight and footerHeight.</param>        [iOSVersion(4.2)]        [Export("drawContentForPageAtIndex")]        public virtual void DrawContentForPageAtIndex(int index, CGRect inRect) {  }                /// <summary>        /// Overridden to add custom drawing to the drawing provided by a given print formatter for a page.        /// </summary>        /// <param name="printFormatter">A UIPrintFormatter object associated with page index.</param>        /// <param name="forPageAtIndex">The index of the page in which printFormatter is to draw.</param>        [iOSVersion(4.2)]        [Export("drawPrintFormatter")]        public virtual void DrawPrintFormatter(UIPrintFormatter printFormatter, int forPageAtIndex) {  }                /// <summary>        /// Overridden to draw the footer of the given page.        /// </summary>        /// <param name="index">The index of the page in which to draw the footer content.</param>        /// <param name="inRect">The rectangle in which the footer content should be drawn. It is specified in the coordinate system of the paper rectangle (paperRect); that is, the origin of coordinates is at the top-left corner of the sheet.</param>        [iOSVersion(4.2)]        [Export("drawFooterForPageAtIndex")]        public virtual void DrawFooterForPageAtIndex(int index, CGRect inRect) {  }                /// <summary>        /// The size of the paper used for printing. (read-only)        /// </summary>        [iOSVersion(4.2)]        [Export("paperRect")]        public CGRect PaperRect { get; private set; }                /// <summary>        /// The area in which printing can occur. (read-only)        /// </summary>        [iOSVersion(4.2)]        [Export("printableRect")]        public CGRect PrintableRect { get; private set; }                /// <summary>        /// The height of the page header.        /// </summary>        [iOSVersion(4.2)]        [Export("headerHeight")]        public CGFloat HeaderHeight { get; set; }                /// <summary>        /// The height of the page footer.        /// </summary>        [iOSVersion(4.2)]        [Export("footerHeight")]        public CGFloat FooterHeight { get; set; }                /// <summary>        /// The print formatters associated with the page renderer.        /// </summary>        [iOSVersion(4.2)]        [Export("printFormatters")]        public AnyObject[] PrintFormatters { get; set; }    }}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// Important: UIActionSheet is deprecated in iOS 8. (Note that UIActionSheetDelegate is also deprecated.) To create and manage action sheets in iOS 8 and later, instead use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIActionSheet_Class/index.html#//apple_ref/occ/cl/UIActionSheet"/>    [iOSVersion(2)]    [Export("")]    public class UIActionSheet : UIView//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSObjectProtocol, Printable, Reflectable, UIAccessibilityIdentification, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UITraitEnvironment    {        public UIActionSheet() { }        /// <summary>        /// Initializes the action sheet using the specified starting parameters.        /// </summary>        /// <param name="title">A string to display in the title area of the action sheet. Pass nil if you do not want to display any text in the title area.</param>        /// <param name="@delegate">The receiver’s delegate object. Although this parameter may be nil, the delegate is used to respond to taps in the action sheet and should usually be provided.</param>        /// <param name="cancelButtonTitle">The title of the cancel button. This button is added to the action sheet automatically and assigned an appropriate index, which is available from the cancelButtonIndex property. This button is displayed in black to indicate that it represents the cancel action. Specify nil if you do not want a cancel button or are presenting the action sheet on an iPad.</param>        /// <param name="destructiveButtonTitle">The title of the destructive button. This button is added to the action sheet automatically and assigned an appropriate index, which is available from the destructiveButtonIndex property. This button is displayed in red to indicate that it represents a destructive behavior. Specify nil if you do not want a destructive button.</param>        [iOSVersion(2)]        public UIActionSheet([Optional] string title, [Optional] UIActionSheetDelegate @delegate, [Optional] string cancelButtonTitle, [Optional] string destructiveButtonTitle) { }                /// <summary>        /// Adds a custom button to the action sheet.        /// </summary>        /// <param name="title">The title of the new button.</param>        [iOSVersion(2)]        [Export("addButtonWithTitle")]        public virtual int AddButtonWithTitle(string title) { return default(int); }                /// <summary>        /// Returns the title of the button at the specified index.        /// </summary>        /// <param name="buttonIndex">The index of the button. The button indices start at 0.</param>        [iOSVersion(2)]        [Export("buttonTitleAtIndex")]        public virtual string ButtonTitleAtIndex(int buttonIndex) { return default(string); }                /// <summary>        /// Displays an action sheet that originates from the specified tab bar.        /// </summary>        /// <param name="view">The tab bar from which the action sheet originates.</param>        [iOSVersion(2)]        [Export("showFromTabBar")]        public virtual void ShowFromTabBar([Unwrapped] UITabBar view) {  }                /// <summary>        /// Displays an action sheet that originates from the specified toolbar.        /// </summary>        /// <param name="view">The toolbar from which the action sheet originates.</param>        [iOSVersion(2)]        [Export("showFromToolbar")]        public virtual void ShowFromToolbar([Unwrapped] UIToolbar view) {  }                /// <summary>        /// Displays an action sheet that originates from the specified view.        /// </summary>        /// <param name="view">The view from which the action sheet originates.</param>        [iOSVersion(2)]        [Export("showInView")]        public virtual void ShowInView([Unwrapped] UIView view) {  }                /// <summary>        /// Displays an action sheet that originates from the specified bar button item.        /// </summary>        /// <param name="item">The bar button item from which the action sheet originates.</param>        /// <param name="animated">Specify true to animate the presentation of the action sheet or false to present it immediately without any animation effects.</param>        [iOSVersion(3.2)]        [Export("showFromBarButtonItem")]        public virtual void ShowFromBarButtonItem([Unwrapped] UIBarButtonItem item, bool animated) {  }                /// <summary>        /// Displays an action sheet that originates from the specified view.        /// </summary>        /// <param name="rect">The portion of view from which to originate the action sheet.</param>        /// <param name="inView">The view from which to originate the action sheet.</param>        /// <param name="animated">Specify true to animate the presentation of the action sheet or false to present it immediately without any animation effects.</param>        [iOSVersion(3.2)]        [Export("showFromRect")]        public virtual void ShowFromRect(CGRect rect, [Unwrapped] UIView inView, bool animated) {  }                /// <summary>        /// Dismisses the action sheet immediately using an optional animation.        /// </summary>        /// <param name="buttonIndex">The index of the button that was clicked. Button indices start at 0.</param>        /// <param name="animated">Specify true to animate the dismissal of the action sheet or false to remove the action sheet without an animation.</param>        [iOSVersion(2)]        [Export("dismissWithClickedButtonIndex")]        public virtual void DismissWithClickedButtonIndex(int buttonIndex, bool animated) {  }                /// <summary>        /// The receiver’s delegate or nil if it doesn’t have a delegate.        /// </summary>        [iOSVersion(2)]        [Export("delegate")]        [Optional]        public UIActionSheetDelegate Delegate { get; set; }                /// <summary>        /// The string that appears in the receiver’s title bar.        /// </summary>        [iOSVersion(2)]        [Export("title")]        public string Title { get; set; }                /// <summary>        /// A Boolean value that indicates whether the receiver is displayed. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("visible")]        public bool Visible { get; private set; }                /// <summary>        /// The receiver’s presentation style.        /// </summary>        [iOSVersion(2)]        [Export("actionSheetStyle")]        public UIActionSheetStyle ActionSheetStyle { get; set; }                /// <summary>        /// The number of buttons on the action sheet. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("numberOfButtons")]        public int NumberOfButtons { get; private set; }                /// <summary>        /// The index number of the cancel button.        /// </summary>        [iOSVersion(2)]        [Export("cancelButtonIndex")]        public int CancelButtonIndex { get; set; }                /// <summary>        /// The index number of the destructive button.        /// </summary>        [iOSVersion(2)]        [Export("destructiveButtonIndex")]        public int DestructiveButtonIndex { get; set; }                /// <summary>        /// The index of the first custom button. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("firstOtherButtonIndex")]        public int FirstOtherButtonIndex { get; private set; }    }    /// <summary>    /// Specifies the style of an action sheet.    /// </summary>    public enum UIActionSheetStyle    {        /// <summary>        /// Takes the appearance of the bottom bar if specified; otherwise, same as UIActionSheetStyleDefault.        /// </summary>        [iOSVersion(2)]        Automatic,        /// <summary>        /// The default style.        /// </summary>        [iOSVersion(2)]        Default,        /// <summary>        /// A black translucent style.        /// </summary>        [iOSVersion(2)]        BlackTranslucent,        /// <summary>        /// A black opaque style.        /// </summary>        [iOSVersion(2)]        BlackOpaque,    }}
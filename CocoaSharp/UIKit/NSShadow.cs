using CoreGraphics;
using ObjectiveC;
using SwiftSharp.Attributes;

namespace UIKit{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/ApplicationKit/Classes/NSShadow_Class/index.html#//apple_ref/occ/cl/NSShadow	/// <summary>	/// An NSShadow object encapsulates the attributes used to create a drop shadow during drawing operations.	/// </summary>	[iOSVersion(6)]	public class NSShadow : NSObject	{		/// <summary>		/// The offset values of the shadow.		/// </summary>		[iOSVersion(6)]		[Export("shadowOffset")]		public CGSize ShadowOffset { get; set; }				/// <summary>		/// Returns the offset values for the receiver.		/// </summary>		/// <returns>The horizontal and vertical offset values, specified using the width and height fields of the NSSize data type. These offsets are measured using the default user coordinate space and are not affected by custom transformations. This means that positive values always extend up and to the right from the user's perspective.</returns>		[iOSVersion(6)]		[Export("shadowOffset")]		public CGSize ShadowOffset { get; set; }				/// <summary>		/// Sets the offset values for the receiver.		/// </summary>		/// <param name="offset">The horizontal and vertical offset values, specified using the width and height fields of the NSSize data type. These offsets are measured using the default user coordinate space and are not affected by custom transformations. This means that positive values always extend up and to the right from the user's perspective.</param>		[iOSVersion(6)]		[Export("shadowOffset")]		public CGSize ShadowOffset { get; set; }				/// <summary>		/// The blur radius of the shadow.		/// </summary>		[iOSVersion(6)]		[Export("shadowBlurRadius")]		public CGFloat ShadowBlurRadius { get; set; }				/// <summary>		/// Returns the blur radius of the receiver.		/// </summary>		/// <returns>The blur radius, as measured in the default user coordinate space. A value of 0 indicates no blur, while larger values produce correspondingly larger blurring. The default value is 0.</returns>		[iOSVersion(6)]		[Export("shadowBlurRadius")]		public CGFloat ShadowBlurRadius { get; set; }				/// <summary>		/// Sets the blur radius of the receiver.		/// </summary>		/// <param name="val">The blur radius, as measured in the default user coordinate space. A value of 0 indicates no blur, while larger values produce correspondingly larger blurring. This value must not be negative.</param>		[iOSVersion(6)]		[Export("shadowBlurRadius")]		public CGFloat ShadowBlurRadius { get; set; }				/// <summary>		/// The color of the shadow.		/// </summary>		[iOSVersion(6)]		[Export("shadowColor")]		public AnyObject ShadowColor { get; set; }				/// <summary>		/// Returns the color for the receiver.		/// </summary>		/// <returns>The current shadow color. A nil shadow color indicates the shadow is not to be drawn. The default shadow color is black with an alpha of 1/3.</returns>		[iOSVersion(6)]		[Export("shadowColor")]		public AnyObject ShadowColor { get; set; }				/// <summary>		/// Sets the shadow color for the receiver.		/// </summary>		/// <param name="color">The shadow color, which must be convertible to an RGBA color. Specify nil if you do not want the shadow to be drawn. Your color may contain alpha information.</param>		[iOSVersion(6)]		[Export("shadowColor")]		public AnyObject ShadowColor { get; set; }	}}
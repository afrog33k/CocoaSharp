using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;using Foundation;using CoreGraphics;namespace UIKit{    /// <summary>    /// To create a custom keyboard, start by subclassing the UIInputViewController class. Add your keyboardâ€™s user interface to the inputView property of your subclass.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIInputViewController_Class/index.html#//apple_ref/occ/cl/UIInputViewController"/>    [iOSVersion(8)]    [Export("")]    public class UIInputViewController : UIViewController//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Printable, UIAppearanceContainer, UIContentContainer, UIStateRestoring, UITextInputDelegate, UITraitEnvironment    {        public UIInputViewController() { }        /// <summary>        /// Switches to the next keyboard in the list of user-enabled keyboards.        /// </summary>        [iOSVersion(8)]        [Export("advanceToNextInputMode")]        public virtual void AdvanceToNextInputMode() {  }                /// <summary>        /// Dismisses the custom keyboard from from the screen.        /// </summary>        [iOSVersion(8)]        [Export("dismissKeyboard")]        public virtual void DismissKeyboard() {  }                /// <summary>        /// Obtains a supplementary lexicon of term pairs for use in a custom keyboard.        /// </summary>        /// <param name="completionHandler">Code that you write to make use of the returned UILexicon object.</param>        [iOSVersion(8)]        [Export("requestSupplementaryLexiconWithCompletion")]        public virtual void RequestSupplementaryLexiconWithCompletion(Action<UILexicon> completionHandler) {  }                /// <summary>        /// The primary view for the input view controller.        /// </summary>        [iOSVersion(8)]        [Export("inputView")]        [Unwrapped]        public UIInputView InputView { get; set; }                /// <summary>        /// A proxy to the text input object that the custom keyboard is interacting with. (read-only)        /// </summary>        [iOSVersion(8)]        [Export("textDocumentProxy")]        public NSObject TextDocumentProxy { get; private set; }                /// <summary>        /// The primary language for a custom keyboard.        /// </summary>        [iOSVersion(8)]        [Export("primaryLanguage")]        [Optional]        public string PrimaryLanguage { get; set; }    }}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSMassFormatter class provides properly formatted, localized descriptions of mass and weight values. Use this class to create localized mass strings when displaying mass information to the users.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Miscellaneous/Reference/NSMassFormatter_Class/index.html#//apple_ref/occ/cl/NSMassFormatter"/>    [iOSVersion(8)]    [Export("")]    public class NSMassFormatter : NSFormatter//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSCopying, NSObjectProtocol, Printable    {        public NSMassFormatter() { }        /// <summary>        /// This method is not supported for the NSMassFormatter class.        /// </summary>        /// <param name="obj">An output parameter. If overridden, this parameter should contain the object created from the provided string.</param>        /// <param name="forString">A string representation of the object.</param>        /// <param name="errorDescription">An output parameter. If overridden, this parameter should contain a description of any errors that occur. If you do not want to receive error messages, set this parameter to NULL.</param>        [iOSVersion(8)]        [Export("getObjectValue")]        public virtual bool GetObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject> obj, string forString, AutoreleasingUnsafeMutablePointer<string> errorDescription) { return default(bool); }                /// <summary>        /// Returns a mass string for the provided value.        /// </summary>        /// <param name="numberInKilograms">The mass’s value in kilograms.</param>        [iOSVersion(8)]        [Export("stringFromKilograms")]        public virtual string StringFromKilograms(Double numberInKilograms) { return default(string); }                /// <summary>        /// Returns a properly formatted mass string for the given value and unit.        /// </summary>        /// <param name="value">The mass’s value in the given unit.</param>        /// <param name="unit">The unit used in the resulting mass string.</param>        [iOSVersion(8)]        [Export("stringFromValue")]        public virtual string StringFromValue(Double value, NSMassFormatterUnit unit) { return default(string); }                /// <summary>        /// Returns the unit string for the provided value.        /// </summary>        /// <param name="numberInKilograms">The mass’s value in kilograms.</param>        /// <param name="usedUnit">An output parameter. This will hold the NSMassFormatterUnit value that corresponds to the returned units.</param>        [iOSVersion(8)]        [Export("unitStringFromKilograms")]        public virtual string UnitStringFromKilograms(Double numberInKilograms, UnsafeMutablePointer<NSMassFormatterUnit> usedUnit) { return default(string); }                /// <summary>        /// Returns the unit string based on the provided value and unit.        /// </summary>        /// <param name="value">The mass’s value for the provided unit.</param>        /// <param name="unit">The unit to use in the resulting mass string.</param>        [iOSVersion(8)]        [Export("unitStringFromValue")]        public virtual string UnitStringFromValue(Double value, NSMassFormatterUnit unit) { return default(string); }                /// <summary>        /// A Boolean value that indicates whether the resulting string represents a person’s mass.        /// </summary>        [iOSVersion(8)]        [Export("forPersonMassUse")]        public bool ForPersonMassUse { get; set; }                /// <summary>        /// The number formatter used to format the numbers in a mass strings.        /// </summary>        [iOSVersion(8)]        [Export("numberFormatter")]        [Unwrapped]        public NSNumberFormatter NumberFormatter { get; set; }                /// <summary>        /// The unit style used by this formatter.        /// </summary>        [iOSVersion(8)]        [Export("unitStyle")]        public NSFormattingUnitStyle UnitStyle { get; set; }    }    /// <summary>    /// The units supported by the NSMassFormatter class.    /// </summary>    public enum NSMassFormatterUnit    {        /// <summary>        /// The gram unit.        /// </summary>        [iOSVersion(8)]        Gram,        /// <summary>        /// The kilogram unit.        /// </summary>        [iOSVersion(8)]        Kilogram,        /// <summary>        /// The ounce unit.        /// </summary>        [iOSVersion(8)]        Ounce,        /// <summary>        /// The pound unit.        /// </summary>        [iOSVersion(8)]        Pound,        /// <summary>        /// The stone unit.        /// </summary>        [iOSVersion(8)]        Stone,    }}
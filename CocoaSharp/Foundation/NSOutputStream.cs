using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSOutputStream_Class/index.html#//apple_ref/occ/cl/NSOutputStream	/// <summary>	/// The NSOutputStream class is a subclass of NSStream that provides write-only stream functionality.	/// </summary>	[iOSVersion(2)]	public class NSOutputStream : NSStream	{		/// <summary>		/// Creates and returns an initialized output stream that will write stream data to memory.		/// </summary>		/// <returns>An initialized output stream that will write stream data to memory.</returns>		[iOSVersion(2)]		[Export("outputStreamToMemory")]		public static NSOutputStream OutputStreamToMemory() { return null; }				/// <summary>		/// Creates and returns an initialized output stream that can write to a provided buffer.		/// </summary>		/// <param name="buffer">The buffer the output stream will write to.</param>		/// <param name="capacity">The size of the buffer in bytes.</param>		/// <returns>An initialized output stream that can write to buffer.</returns>		[iOSVersion(2)]		[Export("outputStreamToBuffer")]		public static NSOutputStream OutputStreamToBuffer(CMutablePointer<Uint8> buffer, int capacity) { return null; }				/// <summary>		/// Creates and returns an initialized output stream for writing to a specified file.		/// </summary>		/// <param name="path">The path to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		/// <returns>An initialized output stream that can write to path.</returns>		[iOSVersion(2)]		[Export("outputStreamToFileAtPath")]		public static NSOutputStream OutputStreamToFileAtPath(string path, bool append) { return null; }				/// <summary>		/// Creates and returns an initialized output stream for writing to a specified URL.		/// </summary>		/// <param name="url">The URL to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		/// <returns>An initialized output stream that can write to url.</returns>		[iOSVersion(4)]		[Export("outputStreamWithURL")]		public static NSOutputStream OutputStreamWithURL(NSURL url, bool append) { return null; }				/// <summary>		/// Returns an initialized output stream that will write to memory.		/// </summary>		/// <returns>An initialized output stream that will write stream data to memory.</returns>		[iOSVersion(2)]		public NSOutputStream( toMemory) { }				/// <summary>		/// Returns an initialized output stream that can write to a provided buffer.		/// </summary>		/// <param name="toBuffer">The buffer the output stream will write to.</param>		/// <param name="capacity">The size of the buffer in bytes.</param>		/// <returns>An initialized output stream that can write to buffer.</returns>		[iOSVersion(2)]		public NSOutputStream(CMutablePointer<Uint8> toBuffer, int capacity) { }				/// <summary>		/// Returns an initialized output stream for writing to a specified file.		/// </summary>		/// <param name="toFileAtPath">The path to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		/// <returns>An initialized output stream that can write to path.</returns>		[iOSVersion(2)]		public NSOutputStream(string toFileAtPath, bool append) { }				/// <summary>		/// Returns an initialized output stream for writing to a specified URL.		/// </summary>		/// <param name="URL">The URL to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		/// <returns>An initialized output stream that can write to url.</returns>		[iOSVersion(4)]		public NSOutputStream(NSURL URL, bool append) { }				/// <summary>		/// Returns whether the receiver can be written to.		/// </summary>		/// <returns>true if the receiver can be written to or if a write must be attempted in order to determine if space is available, false otherwise.</returns>		[iOSVersion(2)]		[Export("hasSpaceAvailable")]		public bool HasSpaceAvailable { get; private set; }				/// <summary>		/// Writes the contents of a provided data buffer to the receiver.		/// </summary>		/// <param name="buffer">The data to write.</param>		/// <param name="maxLength">The length of the data buffer, in bytes.</param>		/// <returns>The number of bytes actually written, or -1 if an error occurs. More information about the error can be obtained with streamError. If the receiver is a fixed-length stream and has reached its capacity, 0 is returned.</returns>		[iOSVersion(2)]		[Export("write")]		public int Write(CConstPointer<Uint8> buffer, int maxLength) { return 0; }	}}
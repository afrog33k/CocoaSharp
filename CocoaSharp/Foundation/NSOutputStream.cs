using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{	/// <summary>	/// The NSOutputStream class is a subclass of NSStream that provides write-only stream functionality.	/// </summary>	/// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSOutputStream_Class/index.html#//apple_ref/occ/cl/NSOutputStream"/>	[iOSVersion(2)]	public class NSOutputStream : NSStream//, AnyObject, NSObjectProtocol	{		/// <summary>		/// Creates and returns an initialized output stream that will write stream data to memory.		/// </summary>		[iOSVersion(2)]		[Export("outputStreamToMemory")]		public static Self OutputStreamToMemory() { return default(Self); }				/// <summary>		/// Creates and returns an initialized output stream for writing to a specified file.		/// </summary>		/// <param name="path">The path to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		[iOSVersion(2)]		[Export("outputStreamToFileAtPath")]		public static Self OutputStreamToFileAtPath(string path, bool append) { return default(Self); }				/// <summary>		/// Returns an initialized output stream that will write to memory.		/// </summary>		/// <param name="toMemory"></param>		[iOSVersion(2)]		public NSOutputStream(Action toMemory) { }				/// <summary>		/// Returns an initialized output stream that can write to a provided buffer.		/// </summary>		/// <param name="toBuffer">The buffer the output stream will write to.</param>		/// <param name="capacity">The size of the buffer in bytes.</param>		[iOSVersion(2)]		public NSOutputStream(UnsafePointer<UInt8> toBuffer, int capacity) { }				/// <summary>		/// Returns an initialized output stream for writing to a specified file.		/// </summary>		/// <param name="toFileAtPath">The path to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		[iOSVersion(2)]		[Export("convenience init")]		public NSOutputStream(string toFileAtPath, bool append) { }				/// <summary>		/// Returns an initialized output stream for writing to a specified URL.		/// </summary>		/// <param name="URL">The URL to the file the output stream will write to.</param>		/// <param name="append">true if newly written data should be appended to any existing file contents, false otherwise.</param>		[iOSVersion(4)]		public NSOutputStream(NSURL URL, bool append) { }				/// <summary>		/// Writes the contents of a provided data buffer to the receiver.		/// </summary>		/// <param name="buffer">The data to write.</param>		/// <param name="maxLength">The length of the data buffer, in bytes.</param>		[iOSVersion(2)]		[Export("write")]		public int Write(ConstUnsafePointer<UInt8> buffer, int maxLength) { return default(int); }				/// <summary>		/// A boolean value that indicates whether the receiver can be written to. (read-only)		/// </summary>		[iOSVersion(2)]		[Export("hasSpaceAvailable")]		public bool HasSpaceAvailable { get; private set; }	}}
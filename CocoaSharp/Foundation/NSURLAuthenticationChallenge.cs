using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// NSURLAuthenticationChallenge encapsulates a challenge from a server requiring authentication from the client.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSURLAuthenticationChallenge_Class/index.html#//apple_ref/occ/cl/NSURLAuthenticationChallenge"/>    [iOSVersion(2)]    [Export("")]    public class NSURLAuthenticationChallenge : NSObject//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSObjectProtocol, NSSecureCoding, Printable    {        public NSURLAuthenticationChallenge() { }        /// <summary>        /// Returns an initialized NSURLAuthenticationChallenge object copying the properties from challenge, and setting the authentication sender to sender.        /// </summary>        /// <param name="authenticationChallenge">The challenge that you want to copy.</param>        /// <param name="sender">The sender that you want to use for the new object. Typically, the sender is the instance of your custom NSURLProtocol subclass that called this method.</param>        [iOSVersion(2)]        public NSURLAuthenticationChallenge(NSURLAuthenticationChallenge authenticationChallenge, NSURLAuthenticationChallengeSender sender) { }                /// <summary>        /// Returns an initialized NSURLAuthenticationChallenge object for the specified protection space, credential, failure count, server response, error, and sender.        /// </summary>        /// <param name="protectionSpace">The protection space for the URL challenge. This provides additional information about the authentication request, such as the host, port, authentication realm, and so on.</param>        /// <param name="proposedCredential">The proposed credential, or nil.</param>        /// <param name="previousFailureCount">The total number of previous failures for this request, including failures for other protection spaces.</param>        /// <param name="failureResponse">An NSURLResponse object containing the server response that caused you to generate an authentication challenge, or nil if no response object is applicable to the challenge.</param>        /// <param name="error">An NSError object describing the authentication failure, or nil if it is not applicable to the challenge.</param>        /// <param name="sender">The object that initiated the authentication challenge (typically, the object that called this method).</param>        [iOSVersion(2)]        public NSURLAuthenticationChallenge(NSURLProtectionSpace protectionSpace, [Optional] NSURLCredential proposedCredential, int previousFailureCount, [Optional] NSURLResponse failureResponse, [Optional] NSError error, NSURLAuthenticationChallengeSender sender) { }                /// <summary>        /// The error object representing the last authentication failure. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("error")]        [Optional]        public NSError Error { get; private set; }                /// <summary>        /// The URL response object representing the last authentication failure. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("failureResponse")]        [Optional]        public NSURLResponse FailureResponse { get; private set; }                /// <summary>        /// The receiver’s count of failed authentication attempts. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("previousFailureCount")]        public int PreviousFailureCount { get; private set; }                /// <summary>        /// The proposed credential for this challenge. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("proposedCredential")]        [Optional]        public NSURLCredential ProposedCredential { get; private set; }                /// <summary>        /// The receiver’s protection space. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("protectionSpace")]        public NSURLProtectionSpace ProtectionSpace { get; private set; }                /// <summary>        /// The receiver’s sender.        /// </summary>        [iOSVersion(2)]        [Export("sender")]        public NSURLAuthenticationChallengeSender Sender { get; private set; }    }}
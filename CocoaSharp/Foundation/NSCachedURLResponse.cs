using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{	/// <summary>	/// An NSCachedURLResponse object represents a cached response to a URL request. It provides the server’s response metadata in the form of an NSURLResponse object, along with an NSData object containing the actual cached content data. Its storage policy determines whether the response should be cached on disk, in memory, or not at all.	/// </summary>	/// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSCachedURLResponse_Class/index.html#//apple_ref/occ/cl/NSCachedURLResponse"/>	[iOSVersion(2)]	public class NSCachedURLResponse : NSObject//, AnyObject, NSCoding, NSCopying, NSObjectProtocol, NSSecureCoding	{		/// <summary>		/// Initializes an NSCachedURLResponse object.		/// </summary>		/// <param name="response">The response to cache.</param>		/// <param name="data">The data to cache.</param>		[iOSVersion(2)]		public NSCachedURLResponse(NSURLResponse response, NSData data) { }				/// <summary>		/// Initializes an NSCachedURLResponse object.		/// </summary>		/// <param name="response">The response to cache.</param>		/// <param name="data">The data to cache.</param>		/// <param name="userInfo">An optional dictionary of user information. May be nil.</param>		/// <param name="storagePolicy">The storage policy for the cached response.</param>		[iOSVersion(2)]		public NSCachedURLResponse(NSURLResponse response, NSData data, Dictionary<NSObject, AnyObject> userInfo, NSURLCacheStoragePolicy storagePolicy) { }				/// <summary>		/// The receiver’s cached data. (read-only)		/// </summary>		[iOSVersion(2)]		[Export("data")]		public NSData Data { get; private set; }				/// <summary>		/// The URL response object associated with the receiver. (read-only)		/// </summary>		[iOSVersion(2)]		[Export("response")]		public NSURLResponse Response { get; private set; }				/// <summary>		/// The receiver’s cache storage policy. (read-only)		/// </summary>		[iOSVersion(2)]		[Export("storagePolicy")]		public NSURLCacheStoragePolicy StoragePolicy { get; private set; }				/// <summary>		/// The receiver’s user info dictionary. (read-only)		/// </summary>		[iOSVersion(2)]		[Export("userInfo")]		public Dictionary<NSObject, AnyObject> UserInfo { get; private set; }	}}
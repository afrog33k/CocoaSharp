using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    ///     /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Constants/index.html#//apple_ref/doc/uid/TP40003793"/>    public class Constants    {        /// <summary>        /// NSError codes in the Cocoa error domain.        /// </summary>        public int NSFileNoSuchFileError { get; set; }                /// <summary>        /// These values are returned as the error code property of an NSError object with the domain “NSURLErrorDomain”.        /// </summary>        public int NSURLErrorUnknown { get; set; }                /// <summary>        /// These error codes are used by error objects associated with the NSURLUbiquitousItemDownloadingErrorKey on an NSURL object when an iCloud-related error occurs.        /// </summary>        public int NSUbiquitousFileErrorMinimum { get; set; }                /// <summary>        /// Errors returned by XPC connections. Note that these are not currently available on iOS.        /// </summary>        public int NSXPCConnectionInterrupted { get; set; }                /// <summary>        /// Constants used by NSDecimal.        /// </summary>        public int NSDecimalMaxSize { get; set; }                /// <summary>        /// Constants representing the maximum and minimum values of NSInteger and NSUInteger.        /// </summary>        public int NSIntegerMax { get; set; }                /// <summary>        /// Version of the Foundation framework in the current environment.        /// </summary>        public Double NSFoundationVersionNumber { get; set; }                /// <summary>        /// Constants to define Foundation Framework version numbers.        /// </summary>        public Double NSFoundationVersionNumber10_0 { get; set; }    }    /// <summary>    /// Options for Block enumeration operations.    /// </summary>    [iOSVersion(4)]    public enum NSEnumerationOptions    {        /// <summary>        /// Specifies that the Block enumeration should be concurrent.        /// The order of invocation is nondeterministic and undefined; this flag is a hint and may be ignored by the implementation under some circumstances; the code of the Block must be safe against concurrent invocation.        /// </summary>        [iOSVersion(4)]        Concurrent,        /// <summary>        /// Specifies that the enumeration should be performed in reverse.        /// This option is available for NSArray and NSIndexSet classes; its behavior is undefined for NSDictionary and NSSet classes, or when combined with the NSEnumerationConcurrent flag.        /// </summary>        [iOSVersion(4)]        Reverse,    }    /// <summary>    /// These constants are used to indicate how items in a request are ordered.    /// </summary>    [iOSVersion(2)]    public enum NSComparisonResult    {        /// <summary>        /// The left operand is smaller than the right operand.        /// </summary>        [iOSVersion(2)]        OrderedAscending,        /// <summary>        /// The two operands are equal.        /// </summary>        [iOSVersion(2)]        OrderedSame,        /// <summary>        /// The left operand is greater than the right operand.        /// </summary>        [iOSVersion(2)]        OrderedDescending,    }    /// <summary>    /// Options for Block sorting operations.    /// </summary>    [iOSVersion(4)]    public enum NSSortOptions    {        /// <summary>        /// Specifies that the Block sort operation should be concurrent.        /// This option is a hint and may be ignored by the implementation under some circumstances; the code of the Block must be safe against concurrent invocation.        /// </summary>        [iOSVersion(4)]        Concurrent,        /// <summary>        /// Specifies that the sorted results should return compared items have equal value in the order they occurred originally.        /// If this option is unspecified equal objects may, or may not, be returned in their original order.        /// </summary>        [iOSVersion(4)]        Stable,    }    /// <summary>    /// These constants specify the location of a variety of directories by the URLsForDirectory:inDomains: and URLForDirectory:inDomain:appropriateForURL:create:error: NSFileManager methods.    /// </summary>    [iOSVersion(2)]    public enum NSSearchPathDirectory    {        /// <summary>        /// Supported applications (/Applications).        /// </summary>        [iOSVersion(2)]        ApplicationDirectory,        /// <summary>        /// Unsupported applications and demonstration versions.        /// </summary>        [iOSVersion(2)]        DemoApplicationDirectory,        /// <summary>        /// Developer applications (/Developer/Applications).        /// Deprecated: As of Xcode 4.3, there is no longer a Developer Application directory directory; instead, Xcode.app is a self-contained application that gets installed in the user’s Applications directory, by default, although it can be put anywhere.        /// </summary>        [iOSVersion(2)]        [Obsolete]        DeveloperApplicationDirectory,        /// <summary>        /// System and network administration applications.        /// </summary>        [iOSVersion(2)]        AdminApplicationDirectory,        /// <summary>        /// Various user-visible documentation, support, and configuration files (/Library).        /// </summary>        [iOSVersion(2)]        LibraryDirectory,        /// <summary>        /// Developer resources (/Developer).        /// Deprecated: As of Xcode 4.3, there is no longer a Developer directory; instead, Xcode.app is a self-contained application that gets installed in the user’s Applications directory, by default, although it can be put anywhere.        /// </summary>        [iOSVersion(2)]        [Obsolete]        DeveloperDirectory,        /// <summary>        /// User home directories (/Users).        /// </summary>        [iOSVersion(2)]        UserDirectory,        /// <summary>        /// Documentation.        /// </summary>        [iOSVersion(2)]        DocumentationDirectory,        /// <summary>        /// Document directory.        /// </summary>        [iOSVersion(2)]        DocumentDirectory,        /// <summary>        /// Location of core services (System/Library/CoreServices).        /// </summary>        [iOSVersion(2)]        CoreServiceDirectory,        /// <summary>        /// Location of user’s autosaved documents Library/Autosave Information        /// </summary>        [iOSVersion(4)]        AutosavedInformationDirectory,        /// <summary>        /// Location of user’s desktop directory.        /// </summary>        [iOSVersion(2)]        DesktopDirectory,        /// <summary>        /// Location of discardable cache files (Library/Caches).        /// </summary>        [iOSVersion(2)]        CachesDirectory,        /// <summary>        /// Location of application support files (Library/Application Support).        /// </summary>        [iOSVersion(2)]        ApplicationSupportDirectory,        /// <summary>        /// Location of the user’s downloads directory.        /// The NSDownloadsDirectory flag will only produce a path only when the NSUserDomainMask is provided.        /// </summary>        [iOSVersion(2)]        DownloadsDirectory,        /// <summary>        /// Location of Input Methods (Library/Input Methods)        /// </summary>        [iOSVersion(4)]        InputMethodsDirectory,        /// <summary>        /// Location of user's Movies directory (~/Movies)        /// </summary>        [iOSVersion(4)]        MoviesDirectory,        /// <summary>        /// Location of user's Music directory (~/Music)        /// </summary>        [iOSVersion(4)]        MusicDirectory,        /// <summary>        /// Location of user's Pictures directory (~/Pictures)        /// </summary>        [iOSVersion(4)]        PicturesDirectory,        /// <summary>        /// Location of system's PPDs directory (Library/Printers/PPDs)        /// </summary>        [iOSVersion(4)]        PrinterDescriptionDirectory,        /// <summary>        /// Location of user's Public sharing directory (~/Public)        /// </summary>        [iOSVersion(4)]        SharedPublicDirectory,        /// <summary>        /// Location of the PreferencePanes directory for use with System Preferences (Library/PreferencePanes)        /// </summary>        [iOSVersion(4)]        PreferencePanesDirectory,        /// <summary>        ///         /// </summary>        ApplicationScriptsDirectory,        /// <summary>        /// For use with NSFileManager method URLForDirectory:inDomain:appropriateForURL:create:error:        /// </summary>        [iOSVersion(4)]        ItemReplacementDirectory,        /// <summary>        /// All directories where applications can occur.        /// </summary>        [iOSVersion(2)]        AllApplicationsDirectory,        /// <summary>        /// All directories where resources can occur.        /// </summary>        [iOSVersion(2)]        AllLibrariesDirectory,        /// <summary>        ///         /// </summary>        TrashDirectory,    }    /// <summary>    /// Search path domain constants specifying base locations for the NSSearchPathDirectory type. These constants are used by the URLsForDirectory:inDomains: and URLForDirectory:inDomain:appropriateForURL:create:error: NSFileManager methods.    /// </summary>    [iOSVersion(2)]    public enum NSSearchPathDomainMask    {        /// <summary>        /// The user’s home directory—the place to install user’s personal items (~).        /// </summary>        [iOSVersion(2)]        UserDomainMask,        /// <summary>        /// Local to the current machine—the place to install items available to everyone on this machine.        /// </summary>        [iOSVersion(2)]        LocalDomainMask,        /// <summary>        /// Publicly available location in the local area network—the place to install items available on the network (/Network).        /// </summary>        [iOSVersion(2)]        NetworkDomainMask,        /// <summary>        /// Provided by Apple—can’t be modified (/System) .        /// </summary>        [iOSVersion(2)]        SystemDomainMask,        /// <summary>        /// All domains.        /// Includes all of the above and future items.        /// </summary>        [iOSVersion(2)]        AllDomainsMask,    }}
using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace {	/// <summary>	/// 	/// </summary>	/// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Constants/index.html#//apple_ref/doc/uid/TP40003793"/>	public class Foundation Constants Reference//:	{		/// <summary>		/// NSError codes in the Cocoa error domain.		/// </summary>		public int NSFileNoSuchFileError { get; set; }				/// <summary>		/// These values are returned as the error code property of an NSError object with the domain “NSURLErrorDomain”.		/// </summary>		public int NSURLErrorUnknown { get; set; }				/// <summary>		/// These error codes are used by error objects associated with the NSURLUbiquitousItemDownloadingErrorKey on an NSURL object when an iCloud-related error occurs.		/// </summary>		public int NSUbiquitousFileErrorMinimum { get; set; }				/// <summary>		/// Errors returned by XPC connections. Note that these are not currently available on iOS.		/// </summary>		public int NSXPCConnectionInterrupted { get; set; }				/// <summary>		/// Constants used by NSDecimal.		/// </summary>		public int NSDecimalMaxSize { get; set; }				/// <summary>		/// Constants representing the maximum and minimum values of NSInteger and NSUInteger.		/// </summary>		public int NSIntegerMax { get; set; }				/// <summary>		/// Version of the Foundation framework in the current environment.		/// </summary>		public Double NSFoundationVersionNumber { get; set; }				/// <summary>		/// Constants to define Foundation Framework version numbers.		/// </summary>		public Double NSFoundationVersionNumber10_0 { get; set; }	}	/// <summary>	/// Options for Block enumeration operations.	/// </summary>	[iOSVersion(4)]	public enum NSEnumerationOptions	{		/// <summary>		/// Specifies that the Block enumeration should be concurrent.		/// The order of invocation is nondeterministic and undefined; this flag is a hint and may be ignored by the implementation under some circumstances; the code of the Block must be safe against concurrent invocation.		/// </summary>		[iOSVersion(4)]		Concurrent,		/// <summary>		/// Specifies that the enumeration should be performed in reverse.		/// This option is available for NSArray and NSIndexSet classes; its behavior is undefined for NSDictionary and NSSet classes, or when combined with the NSEnumerationConcurrent flag.		/// </summary>		[iOSVersion(4)]		Reverse,	}	/// <summary>	/// Options for Block sorting operations.	/// </summary>	[iOSVersion(4)]	public enum NSSortOptions	{		/// <summary>		/// Specifies that the Block sort operation should be concurrent.		/// This option is a hint and may be ignored by the implementation under some circumstances; the code of the Block must be safe against concurrent invocation.		/// </summary>		[iOSVersion(4)]		Concurrent,		/// <summary>		/// Specifies that the sorted results should return compared items have equal value in the order they occurred originally.		/// If this option is unspecified equal objects may, or may not, be returned in their original order.		/// </summary>		[iOSVersion(4)]		Stable,	}	/// <summary>	/// Search path domain constants specifying base locations for the NSSearchPathDirectory type. These constants are used by the URLsForDirectory:inDomains: and URLForDirectory:inDomain:appropriateForURL:create:error: NSFileManager methods.	/// </summary>	[iOSVersion(2)]	public enum NSSearchPathDomainMask	{		/// <summary>		/// The user’s home directory—the place to install user’s personal items (~).		/// </summary>		[iOSVersion(2)]		UserDomainMask,		/// <summary>		/// Local to the current machine—the place to install items available to everyone on this machine.		/// </summary>		[iOSVersion(2)]		LocalDomainMask,		/// <summary>		/// Publicly available location in the local area network—the place to install items available on the network (/Network).		/// </summary>		[iOSVersion(2)]		NetworkDomainMask,		/// <summary>		/// Provided by Apple—can’t be modified (/System) .		/// </summary>		[iOSVersion(2)]		SystemDomainMask,		/// <summary>		/// All domains.		/// Includes all of the above and future items.		/// </summary>		[iOSVersion(2)]		AllDomainsMask,	}}
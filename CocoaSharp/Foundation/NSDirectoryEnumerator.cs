using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// An NSDirectoryEnumerator object enumerates the contents of a directory, returning the pathnames of all files and directories contained within that directory. These pathnames are relative to the directory.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSDirectoryEnumerator_Class/index.html#//apple_ref/occ/cl/NSDirectoryEnumerator"/>    [iOSVersion(2)]    public class NSDirectoryEnumerator : NSEnumerator//, AnyObject, NSFastEnumeration, NSObjectProtocol    {        /// <summary>        /// Causes the receiver to skip recursion into the most recently obtained subdirectory.        /// </summary>        [iOSVersion(2)]        [Export("skipDescendents")]        public void SkipDescendents() {  }                /// <summary>        /// Causes the receiver to skip recursion into the most recently obtained subdirectory.        /// </summary>        [iOSVersion(4)]        [Export("skipDescendants")]        public void SkipDescendants() {  }                /// <summary>        /// Returns an NSDictionary object that contains the attributes of the directory at which enumeration started.        /// </summary>        [iOSVersion(2)]        [Export("directoryAttributes")]        public Dictionary<NSObject, AnyObject> DirectoryAttributes { get; private set; }                /// <summary>        /// Returns an object that contains the attributes of the most recently returned file or subdirectory (as referenced by the pathname).        /// </summary>        [iOSVersion(2)]        [Export("fileAttributes")]        public Dictionary<NSObject, AnyObject> FileAttributes { get; private set; }                /// <summary>        /// Returns the number of levels deep the current object is in the directory hierarchy being enumerated.        /// </summary>        [iOSVersion(4)]        [Export("level")]        public int Level { get; private set; }    }}
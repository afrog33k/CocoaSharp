using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{	/// <summary>	/// The NSDataDetector class is a specialized subclass of the NSRegularExpression class designed to match data detectors.	/// </summary>	/// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSDataDetector_Class/index.html#//apple_ref/occ/cl/NSDataDetector"/>	[iOSVersion(4)]	public class NSDataDetector : NSRegularExpression//, AnyObject, NSCoding, NSCopying, NSObjectProtocol	{		/// <summary>		/// Creates and returns a new data detector instance.		/// </summary>		/// <param name="checkingTypes">The checking types. The supported checking types are a subset of the types specified in NSTextCheckingType. Those constants can be combined using the C-bitwise OR operator.</param>		/// <param name="error">An out parameter that if an error occurs during initialization contains the encountered error.</param>		[iOSVersion(4)]		[Export("dataDetectorWithTypes")]		public static NSDataDetector DataDetectorWithTypes(NSTextCheckingTypes checkingTypes, NSErrorPointer error) { return default(NSDataDetector); }				/// <summary>		/// Initializes and returns a data detector instance.		/// </summary>		/// <param name="types">The checking types. The supported checking types are a subset of the types NSTextCheckingType. Those constants can be combined using the C-bitwise OR operator.</param>		/// <param name="error">An out parameter that if an error occurs during initialization contains the encountered error.</param>		[iOSVersion(4)]		public NSDataDetector(NSTextCheckingTypes types, NSErrorPointer error) { }				/// <summary>		/// Returns the checking types for this data detector. (read-only)		/// </summary>		[iOSVersion(4)]		[Export("checkingTypes")]		public NSTextCheckingTypes CheckingTypes { get; private set; }	}}
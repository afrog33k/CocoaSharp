using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSURLComponents class is a class that is designed to parse URLs based on RFC 3986 and to construct URLs from their constituent parts. Its behavior differs subtly from the NSURL class, which conforms to older RFCs. However, you can easily obtain an NSURL object based on the contents of a URL components object or vice versa.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSURLComponents_class/index.html#//apple_ref/occ/cl/NSURLComponents"/>    [iOSVersion(7)]    [Export("")]    public class NSURLComponents : NSObject//, AnyObject, CVarArgType, Equatable, Hashable, NSCopying, NSObjectProtocol, Printable    {        /// <summary>        /// Initializes a URL components object with nil for every component.        /// </summary>        [iOSVersion(7)]        public NSURLComponents() { }                /// <summary>        /// Returns a URL object derived from the components object.        /// </summary>        /// <param name="baseURL">If non-nil, this URL is used as the base URL portion of the resulting URL object.</param>        [iOSVersion(7)]        [return:Optional]        public virtual NSURL URLRelativeToURL([Optional] NSURL baseURL) { return default(NSURL); }                /// <summary>        /// A URL derived from the components object, in string form. (read-only)        /// </summary>        [iOSVersion(8)]        [Export("string")]        [Optional]        public string String { get; private set; }                /// <summary>        /// A URL object derived from the components object. (read-only)        /// </summary>        [iOSVersion(7)]        [Optional]        public NSURL URL { get; private set; }                /// <summary>        /// The fragment URL component (the part after a # symbol), or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("fragment")]        [Optional]        public string Fragment { get; set; }                /// <summary>        /// The host URL subcomponent, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("host")]        [Optional]        public string Host { get; set; }                /// <summary>        /// The password URL subcomponent, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("password")]        [Optional]        public string Password { get; set; }                /// <summary>        /// The path URL component, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("path")]        [Optional]        public string Path { get; set; }                /// <summary>        /// The port number URL component, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("port")]        [Optional]        public NSNumber Port { get; set; }                /// <summary>        /// The query URL component as a string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("query")]        [Optional]        public string Query { get; set; }                /// <summary>        /// The query URL component as an array of name/value pairs.        /// </summary>        [iOSVersion(8)]        [Export("queryItems")]        public AnyObject[] QueryItems { get; set; }                /// <summary>        /// The scheme URL component, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("scheme")]        [Optional]        public string Scheme { get; set; }                /// <summary>        /// The username URL subcomponent, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("user")]        [Optional]        public string User { get; set; }                /// <summary>        /// The fragment URL component (the part after a # symbol) expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedFragment")]        [Optional]        public string PercentEncodedFragment { get; set; }                /// <summary>        /// The host URL subcomponent expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedHost")]        [Optional]        public string PercentEncodedHost { get; set; }                /// <summary>        /// The password URL subcomponent expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedPassword")]        [Optional]        public string PercentEncodedPassword { get; set; }                /// <summary>        /// The path URL component expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedPath")]        [Optional]        public string PercentEncodedPath { get; set; }                /// <summary>        /// The query URL component expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedQuery")]        [Optional]        public string PercentEncodedQuery { get; set; }                /// <summary>        /// The username URL subcomponent expressed as a URL-encoded string, or nil if not present.        /// </summary>        [iOSVersion(7)]        [Export("percentEncodedUser")]        [Optional]        public string PercentEncodedUser { get; set; }    }}
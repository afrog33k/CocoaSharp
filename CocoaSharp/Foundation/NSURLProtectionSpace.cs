using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// An NSURLProtectionSpace object represents a server or an area on a server, commonly referred to as a realm, that requires authentication. The protection space defines a series of matching constraints that determine which credential should be provided.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSURLProtectionSpace_Class/index.html#//apple_ref/occ/cl/NSURLProtectionSpace"/>    [iOSVersion(2)]    public class NSURLProtectionSpace : NSObject//, AnyObject, NSCoding, NSCopying, NSObjectProtocol, NSSecureCoding    {        /// <summary>        /// Initializes a protection space object.        /// </summary>        /// <param name="host">The host name for the protection space object.</param>        /// <param name="port">The port for the protection space object. If port is 0 the default port for the specified protocol is used, for example, port 80 for HTTP. Note that servers can, and do, treat these values differently.</param>        /// <param name="protocol"></param>        /// <param name="realm">A string indicating a protocol specific subdivision of the host. realm may be nil if there is no specified realm or if the protocol doesn’t support realms.</param>        /// <param name="authenticationMethod">The type of authentication to use. authenticationMethod should be set to one of the values in NSURLProtectionSpace Authentication Methods or nil to use the default, NSURLAuthenticationMethodDefault.</param>        [iOSVersion(2)]        public NSURLProtectionSpace(string host, int port, string protocol, string realm, string authenticationMethod) { }                /// <summary>        /// Initializes a protection space object representing a proxy server.        /// </summary>        /// <param name="proxyHost">The host of the proxy server for the protection space object.</param>        /// <param name="port">The port for the protection space object. If port is 0 the default port for the specified proxy type is used, for example, port 80 for HTTP. Note that servers can, and do, treat these values differently.</param>        /// <param name="type">The type of proxy server. The value of proxyType should be set to one of the values specified in NSURLProtectionSpace Proxy Types.</param>        /// <param name="realm">A string indicating a protocol specific subdivision of the host. realm may be nil if there is no specified realm or if the protocol doesn’t support realms.</param>        /// <param name="authenticationMethod">The type of authentication to use. authenticationMethod should be set to one of the values in NSURLProtectionSpace Authentication Methods or nil to use the default, NSURLAuthenticationMethodDefault.</param>        /// <param name="NAME_YOUR_PARAMS">DO NOT USE THIS PARAMETER - Instead make sure to name the parameters you're using.</param>        [iOSVersion(2)]        [IgnoreParameters("NAME_YOUR_PARAMS")]        public NSURLProtectionSpace(string proxyHost, int port, string type, string realm, string authenticationMethod, bool NAME_YOUR_PARAMS = false) { }                /// <summary>        /// The authentication method used by the receiver. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("authenticationMethod")]        public string AuthenticationMethod { get; private set; }                /// <summary>        /// The acceptable certificate-issuing authorities for client certificate authentication. (read-only)        /// </summary>        [iOSVersion(3)]        [Export("distinguishedNames")]        public AnyObject[] DistinguishedNames { get; private set; }                /// <summary>        /// The receiver’s host. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("host")]        public string Host { get; private set; }                /// <summary>        /// The receiver’s port. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("port")]        public int Port { get; private set; }                /// <summary>        /// The receiver’s protocol. (read-only)        /// </summary>        [iOSVersion(2)]        public string protocol { get; private set; }                /// <summary>        /// The receiver's proxy type. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("proxyType")]        public string ProxyType { get; private set; }                /// <summary>        /// The receiver’s authentication realm (read-only)        /// </summary>        [iOSVersion(2)]        [Export("realm")]        public string Realm { get; private set; }                /// <summary>        /// A boolean value that indicates whether the credentials for the protection space can be sent securely. (read-only)        /// </summary>        [iOSVersion(2)]        [Export("receivesCredentialSecurely")]        public bool ReceivesCredentialSecurely { get; private set; }                /// <summary>        /// A representation of the server’s SSL transaction state. (read-only)        /// </summary>        [iOSVersion(3)]        [Export("serverTrust")]        public SecTrust ServerTrust { get; private set; }    }}
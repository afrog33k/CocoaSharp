using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSHTTPURLResponse_Class/index.html#//apple_ref/occ/cl/NSHTTPURLResponse	/// <summary>	/// The NSHTTPURLResponse class is a subclass of NSURLResponse that provides methods for accessing information specific to HTTP protocol responses. Whenever you make HTTP URL load requests, any response objects you get back from the NSURLSession, NSURLConnection, or NSURLDownload class are instances of the NSHTTPURLResponse class.	/// </summary>	[iOSVersion(2)]	public class NSHTTPURLResponse : NSURLResponse	{		/// <summary>		/// Initializes an HTTP URL response object with a status code, protocol version, and response headers.		/// </summary>		/// <param name="URL">The URL from which the response was generated.</param>		/// <param name="statusCode">The HTTP status code to return (404, for example). See RFC 2616 for details.</param>		/// <param name="HTTPVersion">The version of the HTTP response as returned by the server. This is typically represented as &quot;HTTP/1.1&quot;.</param>		/// <param name="headerFields">A dictionary representing the keys and values from the server’s response header.</param>		/// <returns>An initialized NSHTTPURLResponse object or nil if an error occurred during initialization.</returns>		[iOSVersion(5)]		public NSHTTPURLResponse(NSURL URL, int statusCode, string HTTPVersion, NSDictionary headerFields) { }				/// <summary>		/// Returns all the HTTP header fields of the receiver.		/// </summary>		/// <returns>A dictionary containing all the HTTP header fields received as part of the server’s response. By examining this dictionary clients can see the “raw” header information returned by the HTTP server.</returns>		[iOSVersion(2)]		[Export("allHeaderFields")]		public NSDictionary AllHeaderFields { get; private set; }				/// <summary>		/// Returns a localized string corresponding to a specified HTTP status code.		/// </summary>		/// <param name="statusCode">The HTTP status code. See RFC 2616 for details.</param>		/// <returns>A localized string suitable for displaying to users that describes the specified status code.</returns>		[iOSVersion(2)]		[Export("localizedStringForStatusCode")]		public static string LocalizedStringForStatusCode(int statusCode) { return ""; }				/// <summary>		/// Returns the receiver’s HTTP status code.		/// </summary>		/// <returns>The receiver’s HTTP status code. See RFC 2616 for details.</returns>		[iOSVersion(2)]		[Export("statusCode")]		public int StatusCode { get; private set; }	}}
using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Protocols/NSObject_Protocol/index.html#//apple_ref/doc/uid/TP40003785	/// <summary>	/// The NSObject protocol groups methods that are fundamental to all Objective-C objects.	/// </summary>	[iOSVersion(2)]	public interface NSObjectProtocol //TODO: is this really called NSObjectProtocol?	{		/// <summary>		/// Returns the class object for the receiver’s superclass. (required)		/// </summary>		/// <returns>The class object for the receiver’s superclass.</returns>		[iOSVersion(2)]		[Export("superclass")]		AnyClass Superclass();				/// <summary>		/// Returns a Boolean value that indicates whether the receiver and a given object are equal. (required)		/// </summary>		/// <param name="anObject">The object to be compared to the receiver. May be nil, in which case this method returns false.</param>		/// <returns>true if the receiver and anObject are equal, otherwise false.</returns>		[iOSVersion(2)]		[Export("isEqual")]		bool IsEqual(AnyObject anObject);				/// <summary>		/// Returns the receiver. (required)		/// </summary>		/// <returns>The receiver.</returns>		[iOSVersion(2)]		[Export("self")]		NSObject self();				/// <summary>		/// Returns a Boolean value that indicates whether the receiver is an instance of given class or an instance of any class that inherits from that class. (required)		/// </summary>		/// <param name="aClass">A class object representing the Objective-C class to be tested.</param>		/// <returns>true if the receiver is an instance of aClass or an instance of any class that inherits from aClass, otherwise false.</returns>		[iOSVersion(2)]		[Export("isKindOfClass")]		bool IsKindOfClass(AnyClass aClass);				/// <summary>		/// Returns a Boolean value that indicates whether the receiver is an instance of a given class. (required)		/// </summary>		/// <param name="aClass">A class object representing the Objective-C class to be tested.</param>		/// <returns>true if the receiver is an instance of aClass, otherwise false.</returns>		[iOSVersion(2)]		[Export("isMemberOfClass")]		bool IsMemberOfClass(AnyClass aClass);				/// <summary>		/// Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message. (required)		/// </summary>		/// <param name="aSelector">A selector that identifies a message.</param>		/// <returns>true if the receiver implements or inherits a method that can respond to aSelector, otherwise false.</returns>		[iOSVersion(2)]		[Export("respondsToSelector")]		bool RespondsToSelector(Selector aSelector);				/// <summary>		/// Returns a Boolean value that indicates whether the receiver conforms to a given protocol. (required)		/// </summary>		/// <param name="aProtocol">A protocol object that represents a particular protocol.</param>		/// <returns>true if the receiver conforms to aProtocol, otherwise false.</returns>		[iOSVersion(2)]		[Export("conformsToProtocol")]		bool ConformsToProtocol(Protocol aProtocol);				/// <summary>		/// Returns a Boolean value that indicates whether the receiver does not descend from NSObject. (required)		/// </summary>		/// <returns>false if the receiver really descends from NSObject, otherwise true.</returns>		[iOSVersion(2)]		[Export("isProxy")]		bool IsProxy();	}}
using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSURLConnectionDataDelegate_protocol/index.html#//apple_ref/occ/intf/NSURLConnectionDataDelegate	/// <summary>	/// The NSURLConnectionDataDelegate protocol describes methods that should be implemented by the delegate for an instance of the NSURLConnection class. Many methods in this protocol existed as part of an informal protocol in previous versions of OS X and iOS.	/// </summary>	[iOSVersion(5)]	public interface NSURLConnectionDataDelegate	{		/// <summary>		/// Sent when the connection has received sufficient data to construct the URL response for its request.		/// </summary>		/// <param name="connection">The connection sending the message.</param>		/// <param name="didReceiveResponse">The URL response for the connection's request. This object is immutable and will not be modified by the URL loading system once it is presented to the delegate.</param>		[iOSVersion(2)]		[Export("connection")]		[Optional]		void Connection(NSURLConnection connection, NSURLResponse didReceiveResponse);				/// <summary>		/// Sent as a connection loads data incrementally.		/// </summary>		/// <param name="connection">The connection sending the message.</param>		/// <param name="didReceiveData">The newly available data. The delegate should concatenate the contents of each data object delivered to build up the complete data for a URL load.</param>		[iOSVersion(2)]		[Export("connection")]		[Optional]		void Connection(NSURLConnection connection, NSData didReceiveData);				/// <summary>		/// Sent as the body (message data) of a request is transmitted (such as in an http POST request).		/// </summary>		/// <param name="connection">The connection sending the message.</param>		/// <param name="didSendBodyData">The number of bytes written in the latest write.</param>		/// <param name="totalBytesWritten">The total number of bytes written for this connection.</param>		/// <param name="totalBytesExpectedToWrite">The number of bytes the connection expects to write.</param>		[iOSVersion(3)]		[Export("connection")]		[Optional]		void Connection(NSURLConnection connection, int didSendBodyData, int totalBytesWritten, int totalBytesExpectedToWrite);				/// <summary>		/// Sent when a connection has finished loading successfully.		/// </summary>		/// <param name="connection">The connection sending the message.</param>		[iOSVersion(2)]		[Export("connectionDidFinishLoading")]		[Optional]		void ConnectionDidFinishLoading(NSURLConnection connection);				/// <summary>		/// Sent when the connection determines that it must change URLs in order to continue loading a request.		/// </summary>		/// <param name="connection">The connection sending the message.</param>		/// <param name="willSendRequest">The proposed redirected request. The delegate should inspect the redirected request to verify that it meets its needs, and create a copy with new attributes to return to the connection if necessary.</param>		/// <param name="redirectResponse">The URL response that caused the redirect. May be nil in cases where this method is called because of URL canonicalization.</param>		/// <returns>The actual URL request to use in light of the redirection response. The delegate may return request unmodified to allow the redirect, return a new request, or return nil to reject the redirect and continue processing the connection.</returns>		[iOSVersion(2)]		[Export("connection")]		[Optional]		NSURLRequest Connection(NSURLConnection connection, NSURLRequest willSendRequest, NSURLResponse redirectResponse);				/// <summary>		/// Called when an NSURLConnection needs to retransmit a request that has a body stream to provide a new, unopened stream.		/// </summary>		/// <param name="connection">The NSURLConnection that is requesting a new body stream.</param>		/// <returns>This delegate method should return a new, unopened stream that provides the body contents for the request.</returns>		[iOSVersion(3)]		[Export("connection")]		[Optional]		NSInputStream Connection(NSURLConnection connection, NSURLRequest needNewBodyStream);				/// <summary>		/// Sent before the connection stores a cached response in the cache, to give the delegate an opportunity to alter it.		/// </summary>		/// <param name="connection">The connection sending the message.</param>		/// <param name="willCacheResponse">The proposed cached response to store in the cache.</param>		/// <returns>The actual cached response to store in the cache. The delegate may return cachedResponse unmodified, return a modified cached response, or return nil if no cached response should be stored for the connection.</returns>		[iOSVersion(2)]		[Export("connection")]		[Optional]		NSCachedURLResponse Connection(NSURLConnection connection, NSCachedURLResponse willCacheResponse);	}}
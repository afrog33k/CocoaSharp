using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/AppKit/Reference/NSUserActivityDelegate_Protocol/index.html#//apple_ref/occ/intf/NSUserActivityDelegate	/// <summary>	/// The user activity delegate works with an NSUserActivity object, which encapsulates the state of a user activity in an application on a particular device and enables the same activity to be continued on another device. For example, a user browsing an article in Safari on a Mac can move to an iOS device and have the same webpage automatically open in Safari on iOS with the same scroll position.	/// </summary>	[iOSVersion(8)]	public interface NSUserActivityDelegate	{		/// <summary>		/// Notifies the delegate that an input and output streams are available to open.		/// </summary>		/// <param name="userActivity">The user activity that is continuing on another device. This user activity must have originally set supportsContinuationStreams to true.</param>		/// <param name="didReceiveInputStream">The stream from which the originating app can read data written from the continuing app.</param>		/// <param name="outputStream">The stream to which the originating app writes data to be read by the continuing app.</param>		[iOSVersion(8)]		[Export("userActivity")]		[Optional]		void UserActivity(NSUserActivity userActivity, NSInputStream didReceiveInputStream, NSOutputStream outputStream);				/// <summary>		/// Notifies the delegate that the user activity was continued on another device.		/// </summary>		/// <param name="userActivity">The user activity that was continued.</param>		[iOSVersion(8)]		[Export("userActivityWasContinued")]		[Optional]		void UserActivityWasContinued(NSUserActivity userActivity);				/// <summary>		/// Notifies the delegate that the user activity will be saved to be continued or persisted.		/// </summary>		/// <param name="userActivity">The user activity to update.</param>		[iOSVersion(8)]		[Export("userActivityWillSave")]		[Optional]		void UserActivityWillSave(NSUserActivity userActivity);	}}
using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSLocking protocol declares the elementary methods adopted by classes that define lock objects. A lock object is used to coordinate the actions of multiple threads of execution within a single application. By using a lock object, an application can protect critical sections of code from being executed simultaneously by separate threads, thus protecting shared data and other shared resources from corruption.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Protocols/NSLocking_Protocol/index.html#//apple_ref/occ/intf/NSLocking"/>    [iOSVersion(2)]    [Export("")]    public interface NSLocking//:    {        /// <summary>        /// Attempts to acquire a lock, blocking a threadâ€™s execution until the lock can be acquired. (required)        /// </summary>        [iOSVersion(2)]        [Export("lock")]        void Lock();                /// <summary>        /// Relinquishes a previously acquired lock. (required)        /// </summary>        [iOSVersion(2)]        [Export("unlock")]        void Unlock();    }}
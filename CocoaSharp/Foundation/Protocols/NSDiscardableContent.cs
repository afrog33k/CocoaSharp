using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/NSDiscardableContent_Protocol/index.html#//apple_ref/occ/intf/NSDiscardableContent	/// <summary>	/// You implement this protocol when a classâ€™s objects have subcomponents that can be discarded when not being used, thereby giving an application a smaller memory footprint.	/// </summary>	[iOSVersion(4)]	public interface NSDiscardableContent	{		/// <summary>		/// Returns a Boolean value indicating whether the discardable contents are still available and have been successfully accessed. (required)		/// </summary>		/// <returns>YES if the discardable contents are still available and have now been successfully accessed; otherwise, false.</returns>		[iOSVersion(4)]		[Export("beginContentAccess")]		bool BeginContentAccess();				/// <summary>		/// Called if the discardable contents are no longer being accessed. (required)		/// </summary>		[iOSVersion(4)]		[Export("endContentAccess")]		void EndContentAccess();				/// <summary>		/// Called to discard the contents of the receiver if the value of the accessed counter is 0. (required)		/// </summary>		[iOSVersion(4)]		[Export("discardContentIfPossible")]		void DiscardContentIfPossible();				/// <summary>		/// Returns a Boolean value indicating whether the content has been discarded. (required)		/// </summary>		/// <returns>true if the content has been discarded; otherwise, false.</returns>		[iOSVersion(4)]		[Export("isContentDiscarded")]		bool IsContentDiscarded();	}}
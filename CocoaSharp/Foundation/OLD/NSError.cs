using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{    //https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSError_Class/index.html#//apple_ref/occ/cl/NSError    /// <summary>    /// An NSError object encapsulates richer and more extensible error information than is possible using only an error code or error string. The core attributes of an NSError object are an error domain (represented by a string), a domain-specific error code and a user info dictionary containing application specific information.    /// </summary>    [iOSVersion(2)]    public class NSError : NSObject    {        /// <summary>        /// Creates and initializes an NSError object for a given domain and code with a given userInfo dictionary.        /// </summary>        /// <param name="domain">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil. See Error Domains for a list of predefined domains.</param>        /// <param name="code">The error code for the error.</param>        /// <param name="userInfo">The userInfo dictionary for the error. userInfo may be nil.</param>        /// <returns>An NSError object for domain with the specified error code and the dictionary of arbitrary data userInfo.</returns>        [iOSVersion(2)]        [Export("errorWithDomain")]        public static NSError ErrorWithDomain(string domain, int code, NSDictionary userInfo) { return null; }                /// <summary>        /// Returns an NSError object initialized for a given domain and code with a given userInfo dictionary.        /// </summary>        /// <param name="domain">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil. See Error Domains for a list of predefined domains.</param>        /// <param name="code">The error code for the error.</param>        /// <param name="userInfo">The userInfo dictionary for the error. userInfo may be nil.</param>        /// <returns>An NSError object initialized for domain with the specified error code and the dictionary of arbitrary data userInfo.</returns>        [iOSVersion(2)]        public NSError(string domain, int code, NSDictionary userInfo) { }                /// <summary>        /// Returns the receiver’s error code.        /// </summary>        /// <returns>The receiver’s error code.</returns>        [iOSVersion(2)]        [Export("code")]        public int Code { get; private set; }                /// <summary>        /// Returns the receiver’s error domain.        /// </summary>        /// <returns>A string containing the receiver’s error domain.</returns>        [iOSVersion(2)]        [Export("domain")]        public string Domain { get; private set; }                /// <summary>        /// Returns the receiver's user info dictionary.        /// </summary>        /// <returns>The receiver's user info dictionary, or nil if the user info dictionary has not been set.</returns>        [iOSVersion(2)]        [Export("userInfo")]        public NSDictionary UserInfo { get; private set; }                /// <summary>        /// Returns a string containing the localized description of the error.        /// </summary>        /// <returns>A string containing the localized description of the error.</returns>        [iOSVersion(2)]        [Export("localizedDescription")]        public string LocalizedDescription { get; private set; }                /// <summary>        /// Returns an array containing the localized titles of buttons appropriate for displaying in an alert panel.        /// </summary>        /// <returns>An array containing the localized titles of buttons appropriate for displaying in an alert panel. By default this method returns the object in the user info dictionary for the key NSLocalizedRecoveryOptionsErrorKey. If the user info dictionary doesn’t contain a value for NSLocalizedRecoveryOptionsErrorKey, nil is returned.</returns>        [iOSVersion(2)]        [Export("localizedRecoveryOptions")]        public AnyObject[] LocalizedRecoveryOptions { get; private set; }                /// <summary>        /// Returns a string containing the localized recovery suggestion for the error.        /// </summary>        /// <returns>A string containing the localized recovery suggestion for the error. By default this method returns the object in the user info dictionary for the key NSLocalizedRecoverySuggestionErrorKey. If the user info dictionary doesn’t contain a value for NSLocalizedRecoverySuggestionErrorKey, nil is returned.</returns>        [iOSVersion(2)]        [Export("localizedRecoverySuggestion")]        public string LocalizedRecoverySuggestion { get; private set; }                /// <summary>        /// Returns a string containing the localized explanation of the reason for the error.        /// </summary>        /// <returns>A string containing the localized explanation of the reason for the error. By default this method returns the object in the user info dictionary for the key NSLocalizedFailureReasonErrorKey.</returns>        [iOSVersion(2)]        [Export("localizedFailureReason")]        public string LocalizedFailureReason { get; private set; }                /// <summary>        /// Returns an object that conforms to the NSErrorRecoveryAttempting informal protocol.        /// </summary>        /// <returns>An object that conforms to the NSErrorRecoveryAttempting informal protocol. By default this method returns the object for the user info dictionary for the key NSRecoveryAttempterErrorKey. If the user info dictionary doesn’t contain a value for NSRecoveryAttempterErrorKey, nil is returned.</returns>        [iOSVersion(2)]        [Export("recoveryAttempter")]        public AnyObject RecoveryAttempter { get; private set; }                /// <summary>        /// A string to display in response to an alert panel help anchor button being pressed.        /// </summary>        /// <returns>An NSString that the alert panel will include a help anchor button with that value.</returns>        [iOSVersion(4)]        [Export("helpAnchor")]        public string HelpAnchor { get; private set; }                //anything else?                /// <summary>        /// The following error domains are predefined.        /// </summary>                /// <summary>        /// POSIX/BSD errors        /// </summary>        [iOSVersion(2)]        public string NSPOSIXErrorDomain { get; private set; }                /// <summary>        /// Mac OS 9/Carbon errors        /// </summary>        [iOSVersion(2)]        public string NSOSStatusErrorDomain { get; private set; }                /// <summary>        /// Mach errors        /// </summary>        [iOSVersion(2)]        public string NSMachErrorDomain { get; private set; }    }}
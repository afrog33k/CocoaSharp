using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSUUID_Class/index.html#//apple_ref/occ/cl/NSUUID	/// <summary>	/// The NSUUID class creates UUID strings that are to uniquely identify types, interfaces, and other items.	/// </summary>	[iOSVersion(6)]	public class NSUUID : NSObject	{		/// <summary>		/// Create and returns a new UUID with RFC 4122 version 4 random bytes.		/// </summary>		/// <returns>A new UUID object.</returns>		[iOSVersion(6)]		[Export("UUID")]		public static NSUUID UUID() { return null; }				/// <summary>		/// Create and returns a new UUID with RFC 4122 version 4 random bytes.		/// </summary>		/// <returns>A new UUID object.</returns>		[iOSVersion(6)]		public NSUUID() { }				/// <summary>		/// Creates and returns a new UUID with the given bytes.		/// </summary>		/// <param name="UUIDBytes">Raw UUID bytes to use to create the UUID.</param>		/// <returns>A new UUID object.</returns>		[iOSVersion(6)]		public NSUUID(CConstPointer<CUnsignedChar> UUIDBytes) { }				/// <summary>		/// Creates and returns a new UUID from the formatted string.		/// </summary>		/// <param name="UUIDString">The source string containing the UUID. The standard format for UUIDs represented in ASCII is a string punctuated by hyphens, for example 68753A44-4D6F-1226-9C60-0050E4C00067.</param>		/// <returns>A new UUID object. Returns nil for invalid strings.</returns>		[iOSVersion(6)]		public NSUUID(string UUIDString) { }				/// <summary>		/// Returns the UUIDs bytes.		/// </summary>		/// <param name="uuid">The value of uuid represented as raw bytes.</param>		[iOSVersion(6)]		[Export("getUUIDBytes")]		public void GetUUIDBytes(CMutablePointer<CUnsignedChar> uuid) { }				/// <summary>		/// Returns the UUID as a string.		/// </summary>		/// <returns>A string containing a formatted UUID for example E621E1F8-C36C-495A-93FC-0C247A3E6E5F.</returns>		[iOSVersion(6)]		[Export("UUIDString")]		public string UUIDString { get; private set; }	}}
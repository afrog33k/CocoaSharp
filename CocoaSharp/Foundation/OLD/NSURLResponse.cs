using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSURLResponse_Class/index.html#//apple_ref/occ/cl/NSURLResponse	/// <summary>	/// The NSURLResponse class encapsulates the metadata associated with the response to a a URL load request in a manner independent of protocol and URL scheme.	/// </summary>	[iOSVersion(2)]	public class NSURLResponse : NSObject	{		/// <summary>		/// Returns an initialized NSURLResponse object with the URL, MIME type, length, and text encoding set to given values.		/// </summary>		/// <param name="URL">The URL for the new object.</param>		/// <param name="MIMEType">The MIME type.</param>		/// <param name="expectedContentLength">The expected content length.This value should be –1 if the expected length is undetermined</param>		/// <param name="textEncodingName">The text encoding name. This value may be nil.</param>		/// <returns>An initialized NSURLResponse object with the URL set to URL, the MIME type set to MIMEType, length set to length, and text encoding name set to name.</returns>		[iOSVersion(2)]		public NSURLResponse(NSURL URL, string MIMEType, int expectedContentLength, string textEncodingName) { }				/// <summary>		/// Returns the receiver’s expected content length		/// </summary>		/// <returns>The receiver’s expected content length, or NSURLResponseUnknownLength if the length can’t be determined.</returns>		[iOSVersion(2)]		[Export("expectedContentLength")]		public CLongLong ExpectedContentLength { get; private set; }				/// <summary>		/// Returns a suggested filename for the response data.		/// </summary>		/// <returns>A suggested filename for the response data.</returns>		[Export("suggestedFilename")]		public string SuggestedFilename { get; private set; }				/// <summary>		/// Returns the receiver’s MIME type.		/// </summary>		/// <returns>The receiver’s MIME type.</returns>		[iOSVersion(2)]		[Export("MIMEType")]		public string MIMEType { get; private set; }				/// <summary>		/// Returns the name of the receiver’s text encoding provided by the response’s originating source.		/// </summary>		/// <returns>The name of the receiver’s text encoding provided by the response’s originating source, or nil if no text encoding was provided by the protocol.</returns>		[iOSVersion(2)]		[Export("textEncodingName")]		public string TextEncodingName { get; private set; }				/// <summary>		/// Returns the receiver’s URL.		/// </summary>		/// <returns>The receiver’s URL.</returns>		[iOSVersion(2)]		[Export("URL")]		public NSURL URL { get; private set; }	}}
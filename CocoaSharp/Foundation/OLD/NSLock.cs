using ObjectiveC;using System;using SwiftSharp.Attributes;namespace Foundation{	//https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSLock_Class/index.html#//apple_ref/occ/cl/NSLock	/// <summary>	/// An NSLock object is used to coordinate the operation of multiple threads of execution within the same application. An NSLock object can be used to mediate access to an applicationâ€™s global data or to protect a critical section of code, allowing it to run atomically.	/// </summary>	[iOSVersion(2)]	public class NSLock : NSObject	{		/// <summary>		/// Attempts to acquire a lock before a given time and returns a Boolean value indicating whether the attempt was successful.		/// </summary>		/// <param name="limit">The time limit for attempting to acquire a lock.</param>		/// <returns>true if the lock is acquired before limit, otherwise false.</returns>		[iOSVersion(2)]		[Export("lockBeforeDate")]		public bool LockBeforeDate(NSDate limit) { return false; }				/// <summary>		/// Attempts to acquire a lock and immediately returns a Boolean value that indicates whether the attempt was successful.		/// </summary>		/// <returns>true if the lock was acquired, otherwise false.</returns>		[iOSVersion(2)]		[Export("tryLock")]		public bool TryLock() { return false; }				/// <summary>		/// Assigns or returns a name to the receiver.		/// </summary>
        /// <param name="newName">The new name for the receiver. This method makes a copy of the specified string.</param>
        /// <returns>The name of the receiver.</returns>		[iOSVersion(2)]		[Export("name")]		public string Name { get; set; }	}}
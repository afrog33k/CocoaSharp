using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// An NSLock object is used to coordinate the operation of multiple threads of execution within the same application. An NSLock object can be used to mediate access to an applicationâ€™s global data or to protect a critical section of code, allowing it to run atomically.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSLock_Class/index.html#//apple_ref/occ/cl/NSLock"/>    [iOSVersion(2)]    [Export("")]    public class NSLock : NSObject//, AnyObject, CVarArgType, Equatable, Hashable, NSLocking, NSObjectProtocol, Printable    {        public NSLock() { }        /// <summary>        /// Attempts to acquire a lock before a given time and returns a Boolean value indicating whether the attempt was successful.        /// </summary>        /// <param name="limit">The time limit for attempting to acquire a lock.</param>        [iOSVersion(2)]        [Export("lockBeforeDate")]        public virtual bool LockBeforeDate(NSDate limit) { return default(bool); }                /// <summary>        /// Attempts to acquire a lock and immediately returns a Boolean value that indicates whether the attempt was successful.        /// </summary>        [iOSVersion(2)]        [Export("tryLock")]        public virtual bool TryLock() { return default(bool); }                /// <summary>        /// The name associated with the receiver.        /// </summary>        [iOSVersion(2)]        [Export("name")]        [Optional]        public string Name { get; set; }    }}
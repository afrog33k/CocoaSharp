using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// NSUserActivity encapsulates the state of a user activity in an application on a particular device, in a way that allows the same activity to be continued on another device in a corresponding application from the same developer. User activities include actions such as editing a document, viewing a web page, or watching a video.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSUserActivity_Class/index.html#//apple_ref/occ/cl/NSUserActivity"/>    [iOSVersion(8)]    public class NSUserActivity : NSObject//, AnyObject, NSObjectProtocol    {        /// <summary>        /// Initializes and returns a newly created NSUserActivity object with the given activity type.        /// </summary>        /// <param name="activityType">The type of activity to be continued.</param>        [iOSVersion(8)]        public NSUserActivity(string activityType) { }                /// <summary>        /// Initializes and returns a newly created NSUserActvity object with the first activity type from the NSUserActivityTypes key in the app’s Info.plist.        /// </summary>        [iOSVersion(8)]        public NSUserActivity() { }                /// <summary>        /// Requests streams back to the originating app.        /// </summary>        /// <param name="completionHandler">The completion handler block that returns streams.        ///   The block takes three arguments:        ///       inputStream        ///   The stream from which the continuing app can read data written by the originating app.        ///       outputStream        ///   The stream to which the continuing app writes data to be read by the originating app.        ///       error        ///   If successful, nil; if not successful, an NSError object that encapsulates the reason why the streams could not be created.</param>        [iOSVersion(8)]        [Export("getContinuationStreamsWithCompletionHandler")]        public void GetContinuationStreamsWithCompletionHandler(Action<NSInputStream, NSOutputStream, NSError> completionHandler) {  }                /// <summary>        /// Adds to the userInfo dictionary the entries from the given dictionary.        /// </summary>        /// <param name="otherDictionary">The dictionary containing entries to be added.</param>        [iOSVersion(8)]        [Export("addUserInfoEntriesFromDictionary")]        public void AddUserInfoEntriesFromDictionary(Dictionary<NSObject, AnyObject> otherDictionary) {  }                /// <summary>        /// Marks the receiver as the activity currently in use by the user.        /// </summary>        [iOSVersion(8)]        [Export("becomeCurrent")]        public void BecomeCurrent() {  }                /// <summary>        /// Invalidates an activity when it's no longer eligible for continuation.        /// </summary>        [iOSVersion(8)]        [Export("invalidate")]        public void Invalidate() {  }                /// <summary>        /// A Boolean value that determines whether the continuing app can request streams to be opened back to the originating app.        /// </summary>        [iOSVersion(8)]        [Export("supportsContinuationStreams")]        public bool SupportsContinuationStreams { get; set; }                /// <summary>        /// Dictionary containing app-specific state information needed to continue an activity on another device.        /// </summary>        [iOSVersion(8)]        [Export("userInfo")]        public Dictionary<NSObject, AnyObject> UserInfo { get; set; }                /// <summary>        /// The user activity object’s delegate.        /// </summary>        [iOSVersion(8)]        [Export("delegate")]        public NSUserActivityDelegate Delegate { get; set; }                /// <summary>        /// Indicates that the state of the activity needs to be updated.        /// </summary>        [iOSVersion(8)]        [Export("needsSave")]        public bool NeedsSave { get; set; }                /// <summary>        /// The activity type with which the user activity object was created. (read-only)        /// </summary>        [iOSVersion(8)]        [Export("activityType")]        public string ActivityType { get; private set; }                /// <summary>        /// An optional, user-visible title for this activity, such as a document name or web page title.        /// </summary>        [iOSVersion(8)]        [Export("title")]        public string Title { get; set; }                /// <summary>        /// Web page to load in a browser to continue the activity.        /// </summary>        [iOSVersion(8)]        [Export("webpageURL")]        public NSURL WebpageURL { get; set; }    }}
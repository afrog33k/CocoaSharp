using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSEnergyFormatter class provides properly formatted, localized descriptions of energy values. Use this class to create localized strings when displaying energy information (for example, joules or calories) to users.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Miscellaneous/Reference/NSEnergyFormatter_Class/index.html#//apple_ref/occ/cl/NSEnergyFormatter"/>    [iOSVersion(8)]    [Export("")]    public class NSEnergyFormatter : NSFormatter//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSCopying, NSObjectProtocol, Printable    {        public NSEnergyFormatter() { }        /// <summary>        /// This method is not supported for the NSEnergyFormatter class.        /// </summary>        /// <param name="obj">An output parameter. If overridden, this parameter should contain the object created from the provided string.</param>        /// <param name="forString">A string representation of the object.</param>        /// <param name="errorDescription">An output parameter. If overridden, this parameter should contain a description of any errors that occur. If you do not want to receive error messages, set this parameter to NULL.</param>        [iOSVersion(8)]        [Export("getObjectValue")]        public virtual bool GetObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject> obj, string forString, AutoreleasingUnsafeMutablePointer<string> errorDescription) { return default(bool); }                /// <summary>        /// Returns an energy string for the provided value.        /// </summary>        /// <param name="numberInJoules">The energy value in joules.</param>        [iOSVersion(8)]        [Export("stringFromJoules")]        public virtual string StringFromJoules(Double numberInJoules) { return default(string); }                /// <summary>        /// Returns a properly formatted energy string for the given value and unit.        /// </summary>        /// <param name="value">The energy value in the given unit.</param>        /// <param name="unit">The unit used in the resulting energy string.</param>        [iOSVersion(8)]        [Export("stringFromValue")]        public virtual string StringFromValue(Double value, NSEnergyFormatterUnit unit) { return default(string); }                /// <summary>        /// Returns the unit string for the provided value.        /// </summary>        /// <param name="numberInJoules">The energy value in joules.</param>        /// <param name="usedUnit">An output parameter. This will hold the NSEnergyFormatterUnit value that corresponds to the returned units.</param>        [iOSVersion(8)]        [Export("unitStringFromJoules")]        public virtual string UnitStringFromJoules(Double numberInJoules, UnsafeMutablePointer<NSEnergyFormatterUnit> usedUnit) { return default(string); }                /// <summary>        /// Returns the unit string based on the provided value and unit.        /// </summary>        /// <param name="value">The energy value in the provided unit.</param>        /// <param name="unit">The unit to use in the resulting energy string.</param>        [iOSVersion(8)]        [Export("unitStringFromValue")]        public virtual string UnitStringFromValue(Double value, NSEnergyFormatterUnit unit) { return default(string); }                /// <summary>        /// A Boolean value that indicates whether the energy value is used to measure food energy.        /// </summary>        [iOSVersion(8)]        [Export("forFoodEnergyUse")]        public bool ForFoodEnergyUse { get; set; }                /// <summary>        /// The number formatter used to format the numbers in energy strings.        /// </summary>        [iOSVersion(8)]        [Export("numberFormatter")]        public NSNumberFormatter NumberFormatter { get; set; }                /// <summary>        /// The unit style used by this formatter.        /// </summary>        [iOSVersion(8)]        [Export("unitStyle")]        public NSFormattingUnitStyle UnitStyle { get; set; }    }    /// <summary>    /// The units supported by the NSEnergyFormatter class.    /// </summary>    public enum NSEnergyFormatterUnit    {        /// <summary>        /// The joule unit.        /// </summary>        [iOSVersion(8)]        Joule,        /// <summary>        /// The kilojoule unit.        /// </summary>        [iOSVersion(8)]        Kilojoule,        /// <summary>        /// The calorie unit. This unit is often used in chemistry. It is abbreviated as “cal.”        /// </summary>        [iOSVersion(8)]        Calorie,        /// <summary>        /// The kilocalorie unit. This unit is used for food calories in some locales. In general, it is abbreviated as “kcal.” However, it may be abbreviated as “C” when used to represent food calories.        /// </summary>        [iOSVersion(8)]        Kilocalorie,    }}
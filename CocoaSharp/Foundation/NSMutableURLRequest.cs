using ObjectiveC;using System;using SwiftSharp.Attributes;using System.Collections.Generic;namespace Foundation{	/// <summary>	/// NSMutableURLRequest is a subclass of NSURLRequest provided to aid developers who may find it more convenient to mutate a single request object for a series of URL load requests instead of creating an immutable NSURLRequest object for each load.	/// </summary>	/// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSMutableURLRequest_Class/index.html#//apple_ref/occ/cl/NSMutableURLRequest"/>	[iOSVersion(2)]	public class NSMutableURLRequest : NSURLRequest, AnyObject, NSCoding, NSCopying, NSMutableCopying, NSObjectProtocol, NSSecureCoding	{		/// <summary>		/// Adds an HTTP header to the receiver’s HTTP header dictionary.		/// </summary>		/// <param name="value">The value for the header field.</param>		/// <param name="forHTTPHeaderField">The name of the header field. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.</param>		[iOSVersion(2)]		[Export("addValue")]		public void AddValue(string value, string forHTTPHeaderField) {  }				/// <summary>		/// Sets the specified HTTP header field.		/// </summary>		/// <param name="value">The new value for the header field. Any existing value for the field is replaced by the new value.</param>		/// <param name="forHTTPHeaderField">The name of the header field to set. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.</param>		[iOSVersion(2)]		[Export("setValue")]		public void SetValue(string value, string forHTTPHeaderField) {  }				/// <summary>		/// Sets the cache policy of the receiver.		/// </summary>		[iOSVersion(2)]		[Export("cachePolicy")]		public NSURLRequestCachePolicy CachePolicy { get; set; }				/// <summary>		/// Sets the main document URL for the receiver.		/// </summary>		[iOSVersion(2)]		[Export("mainDocumentURL")]		public NSURL MainDocumentURL { get; set; }				/// <summary>		/// Sets the network service type of the connection.		/// </summary>		[iOSVersion(4)]		[Export("networkServiceType")]		public NSURLRequestNetworkServiceType NetworkServiceType { get; set; }				/// <summary>		/// Sets the receiver’s timeout interval, in seconds.		/// </summary>		[iOSVersion(2)]		[Export("timeoutInterval")]		public NSTimeInterval TimeoutInterval { get; set; }				/// <summary>		/// Sets whether the connection can use the device’s cellular radio (if present).		/// </summary>		[iOSVersion(6)]		[Export("allowsCellularAccess")]		public bool AllowsCellularAccess { get; set; }				/// <summary>		/// Replaces the receiver's header fields with the passed values.		/// </summary>		[iOSVersion(2)]		[Export("allHTTPHeaderFields")]		public Dictionary<NSObject, AnyObject> AllHTTPHeaderFields { get; set; }	}}
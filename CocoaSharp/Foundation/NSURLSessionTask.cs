using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSURLSessionTask class is the base class for tasks in a URL session. Tasks are always part of a session; you create a task by calling one of the task creation methods on an NSURLSession object. The method you call determines the type of task.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Foundation/Reference/NSURLSessionTask_class/index.html#//apple_ref/occ/cl/NSURLSessionTask"/>    [iOSVersion(7)]    [Export("")]    public class NSURLSessionTask : NSObject//, AnyObject, CVarArgType, Equatable, Hashable, NSCopying, NSObjectProtocol, Printable    {        public NSURLSessionTask() { }        /// <summary>        /// Cancels the task.        /// </summary>        [iOSVersion(7)]        [Export("cancel")]        public virtual void Cancel() {  }                /// <summary>        /// Resumes the task, if it is suspended.        /// </summary>        [iOSVersion(7)]        [Export("resume")]        public virtual void Resume() {  }                /// <summary>        /// Temporarily suspends a task.        /// </summary>        [iOSVersion(7)]        [Export("suspend")]        public virtual void Suspend() {  }                /// <summary>        /// The current state of the task—active, suspended, in the process of being canceled, or completed. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("state")]        public NSURLSessionTaskState State { get; private set; }                /// <summary>        /// The number of bytes that the task expects to receive in the response body. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("countOfBytesExpectedToReceive")]        public Int64 CountOfBytesExpectedToReceive { get; private set; }                /// <summary>        /// The number of bytes that the task has received from the server in the response body. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("countOfBytesReceived")]        public Int64 CountOfBytesReceived { get; private set; }                /// <summary>        /// The number of bytes that the task expects to send in the request body. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("countOfBytesExpectedToSend")]        public Int64 CountOfBytesExpectedToSend { get; private set; }                /// <summary>        /// The number of bytes that the task has sent to the server in the request body. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("countOfBytesSent")]        public Int64 CountOfBytesSent { get; private set; }                /// <summary>        /// The URL request object currently being handled by the task. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("currentRequest")]        public NSURLRequest CurrentRequest { get; private set; }                /// <summary>        /// The original request object passed when the task was created. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("originalRequest")]        public NSURLRequest OriginalRequest { get; private set; }                /// <summary>        /// The server’s response to the currently active request. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("response")]        [Optional]        public NSURLResponse Response { get; private set; }                /// <summary>        /// An app-provided description of the current task.        /// </summary>        [iOSVersion(7)]        [Export("taskDescription")]        public string TaskDescription { get; set; }                /// <summary>        /// An identifier uniquely identifies the task within a given session. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("taskIdentifier")]        public int TaskIdentifier { get; private set; }                /// <summary>        /// An error object that indicates why the task failed. (read-only)        /// </summary>        [iOSVersion(7)]        [Export("error")]        [Optional]        public NSError Error { get; private set; }    }    /// <summary>    /// Constants for determining the current state of a task.    /// </summary>    //public enum NSURLSessionTaskState    //{    //    /// <summary>    //    /// The task is currently being serviced by the session. A task in this state is subject to the request and resource timeouts specified in the session configuration object.    //    /// </summary>    //    [iOSVersion(7)]    //    Running,    //    /// <summary>    //    /// The task was suspended by the app. No further processing takes place until it is resumed. A task in this state is not subject to timeouts.    //    /// </summary>    //    [iOSVersion(7)]    //    Suspended,    //    /// <summary>    //    /// The task has received a cancel message. The delegate may or may not have received a URLSession:task:didCompleteWithError: message yet. A task in this state is not subject to timeouts.    //    /// </summary>    //    [iOSVersion(7)]    //    Canceling,    //    /// <summary>    //    /// The task has completed (without being canceled), and the task&#39;s delegate receives no further callbacks. If the task completed successfully, the task’s error property is nil. Otherwise, it provides an error object that tells what went wrong. A task in this state is not subject to timeouts.    //    /// </summary>    //    [iOSVersion(7)]    //    Completed,    //}}
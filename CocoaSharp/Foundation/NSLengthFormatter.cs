using ObjectiveC;using System;using SharpSwift.Attributes;using System.Collections.Generic;namespace Foundation{    /// <summary>    /// The NSLengthFormatter class provides properly formatted, localized descriptions of linear distances (for example, length and height measurements). Use this class to create localized length strings when displaying distance information to users.    /// </summary>    /// <see cref="https://developer.apple.com/library/prerelease/ios/documentation/Miscellaneous/Reference/NSLengthFormatter_Class/index.html#//apple_ref/occ/cl/NSLengthFormatter"/>    [iOSVersion(8)]    [Export("")]    public class NSLengthFormatter : NSFormatter//, AnyObject, CVarArgType, Equatable, Hashable, NSCoding, NSCopying, NSObjectProtocol, Printable    {        public NSLengthFormatter() { }        /// <summary>        /// This method is not supported for the NSLengthFormatter class.        /// </summary>        /// <param name="obj">An output parameter. If overridden, this parameter should contain the object created from the provided string.</param>        /// <param name="forString">A string representation of the object.</param>        /// <param name="errorDescription">An output parameter. If overridden, this parameter should contain a description of any errors that occur. If you do not want to receive error messages, set this parameter to NULL.</param>        [iOSVersion(8)]        [Export("getObjectValue")]        public virtual bool GetObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject> obj, string forString, AutoreleasingUnsafeMutablePointer<string> errorDescription) { return default(bool); }                /// <summary>        /// Returns a length string for the provided value.        /// </summary>        /// <param name="numberInMeters">The length’s value in meters.</param>        [iOSVersion(8)]        [Export("stringFromMeters")]        public virtual string StringFromMeters(Double numberInMeters) { return default(string); }                /// <summary>        /// Returns a properly formatted length string for the given value and unit.        /// </summary>        /// <param name="value">The length’s value in the given unit.</param>        /// <param name="unit">The unit used in the resulting length string.</param>        [iOSVersion(8)]        [Export("stringFromValue")]        public virtual string StringFromValue(Double value, NSLengthFormatterUnit unit) { return default(string); }                /// <summary>        /// Returns the unit string for the provided value.        /// </summary>        /// <param name="numberInMeters">The length’s value in meters.</param>        /// <param name="usedUnit">An output parameter. This will hold the NSLengthFormatterUnit value that corresponds to the returned units.</param>        [iOSVersion(8)]        [Export("unitStringFromMeters")]        public virtual string UnitStringFromMeters(Double numberInMeters, UnsafeMutablePointer<NSLengthFormatterUnit> usedUnit) { return default(string); }                /// <summary>        /// Returns the unit string based on the provided value and unit.        /// </summary>        /// <param name="value">The length’s value for the provided unit.</param>        /// <param name="unit">The unit to use in the resulting length string.</param>        [iOSVersion(8)]        [Export("unitStringFromValue")]        public virtual string UnitStringFromValue(Double value, NSLengthFormatterUnit unit) { return default(string); }                /// <summary>        /// A Boolean value that indicates whether the resulting string represents a person’s height.        /// </summary>        [iOSVersion(8)]        [Export("forPersonHeightUse")]        public bool ForPersonHeightUse { get; set; }                /// <summary>        /// The number formatter used to format the numbers in length strings.        /// </summary>        [iOSVersion(8)]        [Export("numberFormatter")]        [Unwrapped]        public NSNumberFormatter NumberFormatter { get; set; }                /// <summary>        /// The unit style used by this formatter.        /// </summary>        [iOSVersion(8)]        [Export("unitStyle")]        public NSFormattingUnitStyle UnitStyle { get; set; }    }    /// <summary>    /// The units supported by the NSLengthFormatter class.    /// </summary>    public enum NSLengthFormatterUnit    {        /// <summary>        /// The millimeter unit.        /// </summary>        [iOSVersion(8)]        Millimeter,        /// <summary>        /// The centimeter unit.        /// </summary>        [iOSVersion(8)]        Centimeter,        /// <summary>        /// The meter unit.        /// </summary>        [iOSVersion(8)]        Meter,        /// <summary>        /// The kilometer unit.        /// </summary>        [iOSVersion(8)]        Kilometer,        /// <summary>        /// The inch unit.        /// </summary>        [iOSVersion(8)]        Inch,        /// <summary>        /// The foot unit.        /// </summary>        [iOSVersion(8)]        Foot,        /// <summary>        /// The yard unit.        /// </summary>        [iOSVersion(8)]        Yard,        /// <summary>        /// The mile unit.        /// </summary>        [iOSVersion(8)]        Mile,    }}